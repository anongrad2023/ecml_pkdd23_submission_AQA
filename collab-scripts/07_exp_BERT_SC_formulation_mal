{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"collapsed_sections":["iEdw2gh7Nz5u","ybu8iEZskb-3","Df9iIZyhkb--","TBwBOc1LJWSS","7EFQMMop0fyz"],"toc_visible":true,"machine_shape":"hm","authorship_tag":"ABX9TyMKY0rP6Nfw5U1sIranrfOI"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"},"accelerator":"GPU","gpuClass":"premium","widgets":{"application/vnd.jupyter.widget-state+json":{"5e3535e991904cd987ecc43c10edb4af":{"model_module":"@jupyter-widgets/controls","model_name":"HBoxModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HBoxModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HBoxView","box_style":"","children":["IPY_MODEL_7922dc0cf8b6464d963b297eb0f08ef2","IPY_MODEL_616a6550367246a2a712055e4b956b41","IPY_MODEL_5265ec0cd2f744e587c95716adb95ffb"],"layout":"IPY_MODEL_1f334aca825b426caef316f97e91f3fe"}},"7922dc0cf8b6464d963b297eb0f08ef2":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_2cfcbe2c316d4a4c8b7edb9404e33c31","placeholder":"​","style":"IPY_MODEL_11833392de2141369474e95e607b3203","value":"Downloading (…)solve/main/vocab.txt: 100%"}},"616a6550367246a2a712055e4b956b41":{"model_module":"@jupyter-widgets/controls","model_name":"FloatProgressModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"FloatProgressModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"ProgressView","bar_style":"success","description":"","description_tooltip":null,"layout":"IPY_MODEL_c685ab87811b477a8b7b418bab2b85c8","max":231508,"min":0,"orientation":"horizontal","style":"IPY_MODEL_312ba06001944668a6b0f511d172e922","value":231508}},"5265ec0cd2f744e587c95716adb95ffb":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_9514c5f30643488c8a027f21354bf808","placeholder":"​","style":"IPY_MODEL_98ca6c4276cc490a8e22a69a5ee93d03","value":" 232k/232k [00:00&lt;00:00, 346kB/s]"}},"1f334aca825b426caef316f97e91f3fe":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"2cfcbe2c316d4a4c8b7edb9404e33c31":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"11833392de2141369474e95e607b3203":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"c685ab87811b477a8b7b418bab2b85c8":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"312ba06001944668a6b0f511d172e922":{"model_module":"@jupyter-widgets/controls","model_name":"ProgressStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"ProgressStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","bar_color":null,"description_width":""}},"9514c5f30643488c8a027f21354bf808":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"98ca6c4276cc490a8e22a69a5ee93d03":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"d7e5dccde8e1422d9bf0ae013e56a7d9":{"model_module":"@jupyter-widgets/controls","model_name":"HBoxModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HBoxModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HBoxView","box_style":"","children":["IPY_MODEL_3b76d4e8b5d041ab9f578dfda4e2b41d","IPY_MODEL_0a244e37169f4ace9e8024dc46c86d09","IPY_MODEL_0b615000837646a599eeadb2179f9f86"],"layout":"IPY_MODEL_7404a8cf68c846358925a8019716c230"}},"3b76d4e8b5d041ab9f578dfda4e2b41d":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_153051b0ffb4460186c493255efc74db","placeholder":"​","style":"IPY_MODEL_5a345506e9bc40adb3427172acebaf48","value":"Downloading (…)cial_tokens_map.json: 100%"}},"0a244e37169f4ace9e8024dc46c86d09":{"model_module":"@jupyter-widgets/controls","model_name":"FloatProgressModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"FloatProgressModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"ProgressView","bar_style":"success","description":"","description_tooltip":null,"layout":"IPY_MODEL_cd2a861cacc942cca71e476ddb277086","max":112,"min":0,"orientation":"horizontal","style":"IPY_MODEL_72f161d98fbc4affa242b8367c126057","value":112}},"0b615000837646a599eeadb2179f9f86":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_46b463194977442791408cfd09468420","placeholder":"​","style":"IPY_MODEL_5adfc94022d44ab692f31e9118cb47af","value":" 112/112 [00:00&lt;00:00, 5.00kB/s]"}},"7404a8cf68c846358925a8019716c230":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"153051b0ffb4460186c493255efc74db":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"5a345506e9bc40adb3427172acebaf48":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"cd2a861cacc942cca71e476ddb277086":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"72f161d98fbc4affa242b8367c126057":{"model_module":"@jupyter-widgets/controls","model_name":"ProgressStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"ProgressStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","bar_color":null,"description_width":""}},"46b463194977442791408cfd09468420":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"5adfc94022d44ab692f31e9118cb47af":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"2c9915221a00452cb316348d0048f926":{"model_module":"@jupyter-widgets/controls","model_name":"HBoxModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HBoxModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HBoxView","box_style":"","children":["IPY_MODEL_3dc07b709b0e407385a8bf446c8f4a63","IPY_MODEL_ad5184d7402f450fb9d7b53dcad04ed8","IPY_MODEL_d064a32f4624440e83b0015c4f597698"],"layout":"IPY_MODEL_368e7488563e4d54be6ea570e951112c"}},"3dc07b709b0e407385a8bf446c8f4a63":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_0f29a13286704cd183c0210e96f3399e","placeholder":"​","style":"IPY_MODEL_b92c7a02990d460799822cd84a099a5a","value":"Downloading (…)okenizer_config.json: 100%"}},"ad5184d7402f450fb9d7b53dcad04ed8":{"model_module":"@jupyter-widgets/controls","model_name":"FloatProgressModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"FloatProgressModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"ProgressView","bar_style":"success","description":"","description_tooltip":null,"layout":"IPY_MODEL_6476c576a29040ccabe1d32a820df8a4","max":48,"min":0,"orientation":"horizontal","style":"IPY_MODEL_c52666a16b354acfa6aa2a320b4b3c48","value":48}},"d064a32f4624440e83b0015c4f597698":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_4623c21c7f074f1ea858a84ba3eefb53","placeholder":"​","style":"IPY_MODEL_9c86b1d817e94ac8801a0bdd47a82a6c","value":" 48.0/48.0 [00:00&lt;00:00, 3.41kB/s]"}},"368e7488563e4d54be6ea570e951112c":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"0f29a13286704cd183c0210e96f3399e":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"b92c7a02990d460799822cd84a099a5a":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"6476c576a29040ccabe1d32a820df8a4":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"c52666a16b354acfa6aa2a320b4b3c48":{"model_module":"@jupyter-widgets/controls","model_name":"ProgressStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"ProgressStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","bar_color":null,"description_width":""}},"4623c21c7f074f1ea858a84ba3eefb53":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"9c86b1d817e94ac8801a0bdd47a82a6c":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"cd8edc50b8db4b79bdf38f163de8e0ab":{"model_module":"@jupyter-widgets/controls","model_name":"HBoxModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HBoxModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HBoxView","box_style":"","children":["IPY_MODEL_f486166de9574059be3b938c7b6238b8","IPY_MODEL_f6850ad7287e470d9b9a7e9e86d90437","IPY_MODEL_01f59f1f685143e8b3f8c9d2ba0f6625"],"layout":"IPY_MODEL_a1e278c1b7dd4d7581a88982e01f9027"}},"f486166de9574059be3b938c7b6238b8":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_4eb3e4a262544d6ba66ab1e858c20a87","placeholder":"​","style":"IPY_MODEL_ec7602601101481db13448cd6a589418","value":"Downloading (…)lve/main/config.json: 100%"}},"f6850ad7287e470d9b9a7e9e86d90437":{"model_module":"@jupyter-widgets/controls","model_name":"FloatProgressModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"FloatProgressModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"ProgressView","bar_style":"success","description":"","description_tooltip":null,"layout":"IPY_MODEL_224c1f311e7446f7b896d92817acd9c2","max":520,"min":0,"orientation":"horizontal","style":"IPY_MODEL_2d9f749986b3431a9df863f7d8ded85c","value":520}},"01f59f1f685143e8b3f8c9d2ba0f6625":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_c8e119f40d084c78a7f48219048236b0","placeholder":"​","style":"IPY_MODEL_2a1ebc991c464b7da39065354a739e64","value":" 520/520 [00:00&lt;00:00, 35.6kB/s]"}},"a1e278c1b7dd4d7581a88982e01f9027":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"4eb3e4a262544d6ba66ab1e858c20a87":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"ec7602601101481db13448cd6a589418":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"224c1f311e7446f7b896d92817acd9c2":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"2d9f749986b3431a9df863f7d8ded85c":{"model_module":"@jupyter-widgets/controls","model_name":"ProgressStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"ProgressStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","bar_color":null,"description_width":""}},"c8e119f40d084c78a7f48219048236b0":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"2a1ebc991c464b7da39065354a739e64":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"8de759ae986d42b3801aaf0e29c42477":{"model_module":"@jupyter-widgets/controls","model_name":"HBoxModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HBoxModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HBoxView","box_style":"","children":["IPY_MODEL_50b1933febaa435ebcc09b3a3eb2daaa","IPY_MODEL_2df9bd8f6dbb4462806324ee79cbb20c","IPY_MODEL_c9fa3ff3a2a44c289e7c726c6254aa95"],"layout":"IPY_MODEL_26b5a402ffe7429095075781816f001d"}},"50b1933febaa435ebcc09b3a3eb2daaa":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_fb8fa158924e4fb8ae3294ddd1ad1076","placeholder":"​","style":"IPY_MODEL_8eba1651e1ae4318abb164f47bb8b24d","value":"Downloading (…)lve/main/config.json: 100%"}},"2df9bd8f6dbb4462806324ee79cbb20c":{"model_module":"@jupyter-widgets/controls","model_name":"FloatProgressModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"FloatProgressModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"ProgressView","bar_style":"success","description":"","description_tooltip":null,"layout":"IPY_MODEL_d05e32252fc94697b9003582ce68fcca","max":570,"min":0,"orientation":"horizontal","style":"IPY_MODEL_c44f3851f2a147218396fafa557f8c2d","value":570}},"c9fa3ff3a2a44c289e7c726c6254aa95":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_8b082aaa9f8b45d783c1ce08ccd01f7b","placeholder":"​","style":"IPY_MODEL_44ede1df37c141ee8fa5d1d11c98ed66","value":" 570/570 [00:00&lt;00:00, 30.2kB/s]"}},"26b5a402ffe7429095075781816f001d":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"fb8fa158924e4fb8ae3294ddd1ad1076":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"8eba1651e1ae4318abb164f47bb8b24d":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"d05e32252fc94697b9003582ce68fcca":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"c44f3851f2a147218396fafa557f8c2d":{"model_module":"@jupyter-widgets/controls","model_name":"ProgressStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"ProgressStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","bar_color":null,"description_width":""}},"8b082aaa9f8b45d783c1ce08ccd01f7b":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"44ede1df37c141ee8fa5d1d11c98ed66":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"815faa84f32f4c7288b116586c62ce1d":{"model_module":"@jupyter-widgets/controls","model_name":"HBoxModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HBoxModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HBoxView","box_style":"","children":["IPY_MODEL_30215e3f997345e8b68b8cddd018d051","IPY_MODEL_d823f6cd2f3b46fcb4bd3d62608e6c06","IPY_MODEL_125a413d1b1c40639d3d4e2a85ed345a"],"layout":"IPY_MODEL_937d8e12f2a342db9d0b37bb0d92fd03"}},"30215e3f997345e8b68b8cddd018d051":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_77b6df5b5f3847d8bff216841ac100cc","placeholder":"​","style":"IPY_MODEL_a715fb87bf2c42a892c688c2be435ddf","value":"Downloading pytorch_model.bin: 100%"}},"d823f6cd2f3b46fcb4bd3d62608e6c06":{"model_module":"@jupyter-widgets/controls","model_name":"FloatProgressModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"FloatProgressModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"ProgressView","bar_style":"success","description":"","description_tooltip":null,"layout":"IPY_MODEL_29f931fcec784938a437805b17f944a3","max":440473133,"min":0,"orientation":"horizontal","style":"IPY_MODEL_21566338d83f41e9a4ba22a7f0bab4d3","value":440473133}},"125a413d1b1c40639d3d4e2a85ed345a":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_20aa6b4c7c9d4e8dbaec26c9c82e50f4","placeholder":"​","style":"IPY_MODEL_f695a4b20ba14757bfa80a89218d152c","value":" 440M/440M [00:00&lt;00:00, 472MB/s]"}},"937d8e12f2a342db9d0b37bb0d92fd03":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"77b6df5b5f3847d8bff216841ac100cc":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"a715fb87bf2c42a892c688c2be435ddf":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"29f931fcec784938a437805b17f944a3":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"21566338d83f41e9a4ba22a7f0bab4d3":{"model_module":"@jupyter-widgets/controls","model_name":"ProgressStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"ProgressStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","bar_color":null,"description_width":""}},"20aa6b4c7c9d4e8dbaec26c9c82e50f4":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"f695a4b20ba14757bfa80a89218d152c":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"5922fc74571d42d2be266417a4d1fd10":{"model_module":"@jupyter-widgets/controls","model_name":"HBoxModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HBoxModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HBoxView","box_style":"","children":["IPY_MODEL_650dcc507e354563bfdf5e1dce357803","IPY_MODEL_b95f71329b984b75ad35624b4a58de71","IPY_MODEL_c59a841251ef4d5980a4e813554403e6"],"layout":"IPY_MODEL_e00a5c1e322e4a789eb718066fcbc968"}},"650dcc507e354563bfdf5e1dce357803":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_bd78a6b833ad4ff3a60e2c1a46150933","placeholder":"​","style":"IPY_MODEL_abc90156a25544b9a09576a4cbba782e","value":"100%"}},"b95f71329b984b75ad35624b4a58de71":{"model_module":"@jupyter-widgets/controls","model_name":"FloatProgressModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"FloatProgressModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"ProgressView","bar_style":"success","description":"","description_tooltip":null,"layout":"IPY_MODEL_44a9ae79b7ac4d36b26a8b1da7f17d34","max":200,"min":0,"orientation":"horizontal","style":"IPY_MODEL_14e5ab4676dd4ea58c2bbe090191f9e0","value":200}},"c59a841251ef4d5980a4e813554403e6":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_409de7ba1c1546f9aea33c7681fe811f","placeholder":"​","style":"IPY_MODEL_788c6a1a1f754194bc7bbce027107b9e","value":" 200/200 [15:43&lt;00:00,  4.74s/epoch]"}},"e00a5c1e322e4a789eb718066fcbc968":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"bd78a6b833ad4ff3a60e2c1a46150933":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"abc90156a25544b9a09576a4cbba782e":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"44a9ae79b7ac4d36b26a8b1da7f17d34":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"14e5ab4676dd4ea58c2bbe090191f9e0":{"model_module":"@jupyter-widgets/controls","model_name":"ProgressStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"ProgressStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","bar_color":null,"description_width":""}},"409de7ba1c1546f9aea33c7681fe811f":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"788c6a1a1f754194bc7bbce027107b9e":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}}}}},"cells":[{"cell_type":"markdown","source":["# Overview"],"metadata":{"id":"iEdw2gh7Nz5u"}},{"cell_type":"markdown","source":["Working on formulating this as a QA problem. That means we need to consider the context, the question, and the content all in one piece of content to be embedded by the process. \n","\n","So we want to take our example tuples, and create single token sequences out of them based on concatentating the strings like:\n","\n","```\n","[CLS] + [context_str] + [SEP] + [content_str] + [SEP] + [question_str] + [SEP]\n","```\n","\n","Everything else remains the same.\n","\n","Currently working off of [this example](https://towardsdatascience.com/fine-tuning-bert-for-text-classification-54e7df642894) for most of the usage of the torch utilities. "],"metadata":{"id":"efPn1x9l19Sw"}},{"cell_type":"markdown","metadata":{"id":"AbeAB8Hokb-2"},"source":["# Setup"]},{"cell_type":"markdown","metadata":{"id":"ybu8iEZskb-3"},"source":["## Imports"]},{"cell_type":"code","execution_count":1,"metadata":{"id":"JiAEt7P6kb-3","executionInfo":{"status":"ok","timestamp":1678919540991,"user_tz":240,"elapsed":4237,"user":{"displayName":"Bill Power","userId":"17299628813846429758"}}},"outputs":[],"source":["import os\n","import numpy as np\n","import pandas as pd\n","from sklearn.model_selection import train_test_split\n","from sklearn.linear_model import LogisticRegression\n","from sklearn.model_selection import GridSearchCV\n","from sklearn.model_selection import cross_val_score\n","import torch\n","import random\n","import warnings\n","warnings.filterwarnings('ignore')\n","\n","from tqdm.notebook import tqdm\n","import pickle"]},{"cell_type":"markdown","metadata":{"id":"0fSMAjHpkb-4"},"source":["## Constants"]},{"cell_type":"code","execution_count":2,"metadata":{"id":"UNU4HLNZkb-5","executionInfo":{"status":"ok","timestamp":1678919540995,"user_tz":240,"elapsed":27,"user":{"displayName":"Bill Power","userId":"17299628813846429758"}}},"outputs":[],"source":["RESULTS_FN_SLUG = \"AQA07_02_results\"\n","\n","GCS_APP_ID = \"aqa-research\"\n","GCS_BUCKET = \"dabi-aqa-data-00\"\n","\n","FN_QUESTIONS = \"questions_01.csv\"\n","FN_CONTEXTS  = \"contexts_01.csv\"\n","\n","FN_A2_RAW = \"a2_raw.csv\"\n","FN_A2_FA  = \"a2_gs.csv\"\n","FN_A3_FA  = \"a3_gs.csv\"\n","FN_A3_MAJ = \"a3_con.csv\"\n","\n","MAX_SEQ_LEN = 64\n","\n","EPOCHS = 200\n","BATCH_SIZE = 16\n","TEST_FRAC = 0.2\n","\n","RAND_SEED = 42"]},{"cell_type":"markdown","metadata":{"id":"glKP3nrhkb-6"},"source":["## GCS Auth - Input Needed"]},{"cell_type":"code","execution_count":3,"metadata":{"id":"xwxl9-b4kb-7","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1678919599756,"user_tz":240,"elapsed":58781,"user":{"displayName":"Bill Power","userId":"17299628813846429758"}},"outputId":"f1a04fe2-283e-4f29-c621-b5c6b22b9628"},"outputs":[{"output_type":"stream","name":"stdout","text":["Go to the following link in your browser:\n","\n","    https://accounts.google.com/o/oauth2/auth?response_type=code&client_id=32555940559.apps.googleusercontent.com&redirect_uri=https%3A%2F%2Fsdk.cloud.google.com%2Fauthcode.html&scope=openid+https%3A%2F%2Fwww.googleapis.com%2Fauth%2Fuserinfo.email+https%3A%2F%2Fwww.googleapis.com%2Fauth%2Fcloud-platform+https%3A%2F%2Fwww.googleapis.com%2Fauth%2Fappengine.admin+https%3A%2F%2Fwww.googleapis.com%2Fauth%2Fsqlservice.login+https%3A%2F%2Fwww.googleapis.com%2Fauth%2Fcompute+https%3A%2F%2Fwww.googleapis.com%2Fauth%2Faccounts.reauth&state=fdR2vMO1kuNuaNmVe7fh044Bxn8O2U&prompt=consent&access_type=offline&code_challenge=vuvsjm26YoocHfW2NaKvB6DE-IqvmQ_lvIyhJUI3pwg&code_challenge_method=S256\n","\n","Enter authorization code: 4/0AWtgzh5hNlQeZDL2i44iXr-RkGaCzVnqgVj2NrWMwET3HRXfbNexX6jdzWYoGJASJ-asbg\n","\n","You are now logged in as [willpowe@gmail.com].\n","Your current project is [None].  You can change this setting by running:\n","  $ gcloud config set project PROJECT_ID\n"]}],"source":["!gcloud auth login --launch-browser"]},{"cell_type":"code","execution_count":4,"metadata":{"id":"SEQdfjlikb-7","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1678919601936,"user_tz":240,"elapsed":2185,"user":{"displayName":"Bill Power","userId":"17299628813846429758"}},"outputId":"7051bb8b-5853-4e1f-9a5e-9353ac27f2af"},"outputs":[{"output_type":"stream","name":"stdout","text":["Updated property [core/project].\n"]}],"source":["!gcloud config set project {GCS_APP_ID}"]},{"cell_type":"code","execution_count":5,"metadata":{"id":"1x_hDs2gkb-8","executionInfo":{"status":"ok","timestamp":1678919601938,"user_tz":240,"elapsed":17,"user":{"displayName":"Bill Power","userId":"17299628813846429758"}}},"outputs":[],"source":["def download_file_from_gcs(src_fn, dest_fn):\n","  dest = f\"/content/{dest_fn}\"\n","  dl_command = f\"gsutil -m cp gs://{GCS_BUCKET}/{src_fn} {dest}\"\n","  os.system(dl_command)\n","\n","def upload_file_to_gcs(src_fn, dest_fn):\n","  dest_url = \"{}/{}\".format(GCS_BUCKET, dest_fn)\n","  ul_command = \"gsutil -m cp {} gs://{}\".format(src_fn, dest_url)\n","  os.system(ul_command)"]},{"cell_type":"markdown","metadata":{"id":"Df9iIZyhkb--"},"source":["## Raw Data"]},{"cell_type":"code","execution_count":6,"metadata":{"id":"YOIG4PnXkb-_","executionInfo":{"status":"ok","timestamp":1678919615916,"user_tz":240,"elapsed":13990,"user":{"displayName":"Bill Power","userId":"17299628813846429758"}}},"outputs":[],"source":["download_file_from_gcs(FN_QUESTIONS, FN_QUESTIONS)\n","download_file_from_gcs(FN_CONTEXTS, FN_CONTEXTS)\n","\n","download_file_from_gcs(FN_A2_RAW, FN_A2_RAW)\n","download_file_from_gcs(FN_A2_FA, FN_A2_FA)\n","download_file_from_gcs(FN_A3_FA, FN_A3_FA)\n","download_file_from_gcs(FN_A3_MAJ, FN_A3_MAJ)"]},{"cell_type":"markdown","metadata":{"id":"tzRLOi-Jkb-_"},"source":["## BERT Setup"]},{"cell_type":"code","execution_count":7,"metadata":{"id":"C_lWu_g_kb_A","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1678919628132,"user_tz":240,"elapsed":12232,"user":{"displayName":"Bill Power","userId":"17299628813846429758"}},"outputId":"400520fe-b339-4689-acce-47901c9e3a30"},"outputs":[{"output_type":"stream","name":"stdout","text":["Looking in indexes: https://pypi.org/simple, https://us-python.pkg.dev/colab-wheels/public/simple/\n","Collecting transformers\n","  Downloading transformers-4.27.1-py3-none-any.whl (6.7 MB)\n","\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m6.7/6.7 MB\u001b[0m \u001b[31m90.7 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25hRequirement already satisfied: pyyaml>=5.1 in /usr/local/lib/python3.9/dist-packages (from transformers) (6.0)\n","Requirement already satisfied: tqdm>=4.27 in /usr/local/lib/python3.9/dist-packages (from transformers) (4.65.0)\n","Requirement already satisfied: packaging>=20.0 in /usr/local/lib/python3.9/dist-packages (from transformers) (23.0)\n","Requirement already satisfied: filelock in /usr/local/lib/python3.9/dist-packages (from transformers) (3.9.0)\n","Requirement already satisfied: regex!=2019.12.17 in /usr/local/lib/python3.9/dist-packages (from transformers) (2022.6.2)\n","Collecting huggingface-hub<1.0,>=0.11.0\n","  Downloading huggingface_hub-0.13.2-py3-none-any.whl (199 kB)\n","\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m199.2/199.2 KB\u001b[0m \u001b[31m27.8 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25hCollecting tokenizers!=0.11.3,<0.14,>=0.11.1\n","  Downloading tokenizers-0.13.2-cp39-cp39-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (7.6 MB)\n","\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m7.6/7.6 MB\u001b[0m \u001b[31m96.8 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25hRequirement already satisfied: numpy>=1.17 in /usr/local/lib/python3.9/dist-packages (from transformers) (1.22.4)\n","Requirement already satisfied: requests in /usr/local/lib/python3.9/dist-packages (from transformers) (2.25.1)\n","Requirement already satisfied: typing-extensions>=3.7.4.3 in /usr/local/lib/python3.9/dist-packages (from huggingface-hub<1.0,>=0.11.0->transformers) (4.5.0)\n","Requirement already satisfied: chardet<5,>=3.0.2 in /usr/local/lib/python3.9/dist-packages (from requests->transformers) (4.0.0)\n","Requirement already satisfied: idna<3,>=2.5 in /usr/local/lib/python3.9/dist-packages (from requests->transformers) (2.10)\n","Requirement already satisfied: certifi>=2017.4.17 in /usr/local/lib/python3.9/dist-packages (from requests->transformers) (2022.12.7)\n","Requirement already satisfied: urllib3<1.27,>=1.21.1 in /usr/local/lib/python3.9/dist-packages (from requests->transformers) (1.26.15)\n","Installing collected packages: tokenizers, huggingface-hub, transformers\n","Successfully installed huggingface-hub-0.13.2 tokenizers-0.13.2 transformers-4.27.1\n"]}],"source":["!pip install transformers"]},{"cell_type":"code","execution_count":8,"metadata":{"id":"VA_ZnC0dkb_A","executionInfo":{"status":"ok","timestamp":1678919628135,"user_tz":240,"elapsed":39,"user":{"displayName":"Bill Power","userId":"17299628813846429758"}}},"outputs":[],"source":["import transformers as ppb"]},{"cell_type":"markdown","source":["## Random Seeds"],"metadata":{"id":"TBwBOc1LJWSS"}},{"cell_type":"code","source":["random.seed(RAND_SEED)\n","np.random.seed(RAND_SEED)\n","torch.manual_seed(RAND_SEED)"],"metadata":{"id":"HNrkkYVqJV62","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1678919628137,"user_tz":240,"elapsed":35,"user":{"displayName":"Bill Power","userId":"17299628813846429758"}},"outputId":"ec993f4b-1252-4448-abe7-e9c6fb1034bb"},"execution_count":9,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<torch._C.Generator at 0x7f5d8c6a3390>"]},"metadata":{},"execution_count":9}]},{"cell_type":"markdown","metadata":{"id":"YEniTxLUPL-K"},"source":["# Data"]},{"cell_type":"markdown","source":["## Content Dataframes"],"metadata":{"id":"zUUz0lb2yLAg"}},{"cell_type":"code","execution_count":10,"metadata":{"id":"WuLRs3tXkb_C","executionInfo":{"status":"ok","timestamp":1678919628139,"user_tz":240,"elapsed":29,"user":{"displayName":"Bill Power","userId":"17299628813846429758"}}},"outputs":[],"source":["questions = pd.read_csv(FN_QUESTIONS)\n","contexts  = pd.read_csv(FN_CONTEXTS)\n","\n","content_a2_raw = pd.read_csv(FN_A2_RAW)\n","content_a2_fa  = pd.read_csv(FN_A2_FA)\n","content_a3_fa  = pd.read_csv(FN_A3_FA)\n","content_a3_maj = pd.read_csv(FN_A3_MAJ)\n","\n","# Could also try this with using the 3's as 0's\n","content_a2_raw = content_a2_raw[content_a2_raw['answer'] != 3] \n","content_a2_fa  = content_a2_fa[content_a2_fa['answer'] != 3] \n","content_a3_fa  = content_a3_fa[content_a3_fa['answer'] != 3] \n","content_a3_maj = content_a3_maj[content_a3_maj['answer'] != 3] \n","\n","content_a3_majplus = pd.concat([content_a3_fa, content_a3_maj])\n","content_a3a2_mp    = pd.concat([content_a3_fa, content_a3_maj, content_a2_fa])"]},{"cell_type":"markdown","source":["Conclusion = I need to balance my dataset with respect to the answers. I could be getting issues w. stratifying my labels per batch. \n","\n","Should look into ways to sample with stratification in the pytorch samplers. "],"metadata":{"id":"wrBKxLprFZXZ"}},{"cell_type":"markdown","metadata":{"id":"kNQBRgQkkb_B"},"source":["## Transformer Init\n","\n"]},{"cell_type":"code","execution_count":11,"metadata":{"id":"wrotnPAHkb_C","colab":{"base_uri":"https://localhost:8080/","height":445,"referenced_widgets":["5e3535e991904cd987ecc43c10edb4af","7922dc0cf8b6464d963b297eb0f08ef2","616a6550367246a2a712055e4b956b41","5265ec0cd2f744e587c95716adb95ffb","1f334aca825b426caef316f97e91f3fe","2cfcbe2c316d4a4c8b7edb9404e33c31","11833392de2141369474e95e607b3203","c685ab87811b477a8b7b418bab2b85c8","312ba06001944668a6b0f511d172e922","9514c5f30643488c8a027f21354bf808","98ca6c4276cc490a8e22a69a5ee93d03","d7e5dccde8e1422d9bf0ae013e56a7d9","3b76d4e8b5d041ab9f578dfda4e2b41d","0a244e37169f4ace9e8024dc46c86d09","0b615000837646a599eeadb2179f9f86","7404a8cf68c846358925a8019716c230","153051b0ffb4460186c493255efc74db","5a345506e9bc40adb3427172acebaf48","cd2a861cacc942cca71e476ddb277086","72f161d98fbc4affa242b8367c126057","46b463194977442791408cfd09468420","5adfc94022d44ab692f31e9118cb47af","2c9915221a00452cb316348d0048f926","3dc07b709b0e407385a8bf446c8f4a63","ad5184d7402f450fb9d7b53dcad04ed8","d064a32f4624440e83b0015c4f597698","368e7488563e4d54be6ea570e951112c","0f29a13286704cd183c0210e96f3399e","b92c7a02990d460799822cd84a099a5a","6476c576a29040ccabe1d32a820df8a4","c52666a16b354acfa6aa2a320b4b3c48","4623c21c7f074f1ea858a84ba3eefb53","9c86b1d817e94ac8801a0bdd47a82a6c","cd8edc50b8db4b79bdf38f163de8e0ab","f486166de9574059be3b938c7b6238b8","f6850ad7287e470d9b9a7e9e86d90437","01f59f1f685143e8b3f8c9d2ba0f6625","a1e278c1b7dd4d7581a88982e01f9027","4eb3e4a262544d6ba66ab1e858c20a87","ec7602601101481db13448cd6a589418","224c1f311e7446f7b896d92817acd9c2","2d9f749986b3431a9df863f7d8ded85c","c8e119f40d084c78a7f48219048236b0","2a1ebc991c464b7da39065354a739e64"]},"executionInfo":{"status":"ok","timestamp":1678919637361,"user_tz":240,"elapsed":9248,"user":{"displayName":"Bill Power","userId":"17299628813846429758"}},"outputId":"9b324425-a852-4bcb-a797-48fcfb10b1ac"},"outputs":[{"output_type":"display_data","data":{"text/plain":["Downloading (…)solve/main/vocab.txt:   0%|          | 0.00/232k [00:00<?, ?B/s]"],"application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"5e3535e991904cd987ecc43c10edb4af"}},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["Downloading (…)cial_tokens_map.json:   0%|          | 0.00/112 [00:00<?, ?B/s]"],"application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"d7e5dccde8e1422d9bf0ae013e56a7d9"}},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["Downloading (…)okenizer_config.json:   0%|          | 0.00/48.0 [00:00<?, ?B/s]"],"application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"2c9915221a00452cb316348d0048f926"}},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["Downloading (…)lve/main/config.json:   0%|          | 0.00/520 [00:00<?, ?B/s]"],"application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"cd8edc50b8db4b79bdf38f163de8e0ab"}},"metadata":{}}],"source":["# For sequence classification\n","model_class, tokenizer_class, pretrained_weights = (ppb.BertForSequenceClassification, ppb.BertTokenizer, 'textattack/bert-base-uncased-yelp-polarity')\n","\n","# Load pretrained model/tokenizer\n","tokenizer = tokenizer_class.from_pretrained(pretrained_weights)"]},{"cell_type":"markdown","source":["## Creating CCQ Strings\n"],"metadata":{"id":"2HOo7XHg3cW2"}},{"cell_type":"markdown","source":["In the 'typical' QA scenario they split things into concatenated strings like so:\n","\n","```\n","[CLS] + [Content] + [SEP] + [Question] + [SEP]\n","```\n","Then they produce an output in terms of a sequence of tokens, which they read out as a string. \n","\n","We want to do a sequence classification task, similar to the BoolQ paper. In their work, they use the same process above, but limit themselves to Yes/No questions, so they do what we do, and use the final representation to make a prediction for the yes/no label. \n","\n","Our novelty is in the 'context' description. We want to evaluate the relationship between a context and some content across a common set of 'attitude questions'. \n","\n","So We'll try to create sequences like: \n","\n","```\n","[CLS] + [context_str] + [SEP] + [content_str] + [SEP] + [question_str] + [SEP]\n","```\n"," Which I'm going to refer to as CCQ strings. These will then be tokenized using the same BERT tokenizers as we've used before (which is inline with the BoolQ work). \n","\n"," To that end, I think the best way to approach this is to have a method which takes in three data frames; question, context, and content dataframes, and modifies the content dataframe to include the concatenated CCQ, alone with its tokenization and its mask. "],"metadata":{"id":"DQ51bZVh5Czs"}},{"cell_type":"code","source":["# Adds the Context-Content-Question string, its token sequence, and its training\n","# mask to each row in the dataframe. \n","#\n","# After running, the following columns are added to df_cnt:\n","#   'ccq_str'     = The concatenated string formed from the ctx, cnt, q\n","def prepare_ccq_strs(df_cnt, df_ctx, df_q):\n","  # filter out the non 0/1 answers\n","  df_cnt = df_cnt[df_cnt['answer'] != 3]\n","\n","  map_q_2_ts_am = dict()\n","  def build_q_map(row):\n","    global map_q_emb\n","    map_q_2_ts_am[row['question_id']] = row['question_text']\n","\n","  map_ctx_2_ts_am = dict()\n","  def build_ctx_map(row):\n","    global map_ctx_emb\n","    map_ctx_2_ts_am[row['context_id']] = row['context_text']\n","\n","  questions.apply(build_q_map, axis=1)\n","  contexts.apply(build_ctx_map, axis=1)\n","\n","  def make_ccq(row):\n","    ctx_id = row['context_id']\n","    q_id   = row['question_id']\n","\n","    ccq_s  = \"[CLS] \"+map_ctx_2_ts_am[ctx_id]\n","    # ccq_s += \" [SEP] \"+map_q_2_ts_am[q_id]\n","    ccq_s += \" \"+map_q_2_ts_am[q_id]\n","    ccq_s += \" [SEP] \"+row['content_text']+ \" [SEP]\"\n","    return ccq_s\n","  \n","  df_cnt['ccq_str'] = df_cnt.apply(make_ccq, axis=1)\n","\n","  return df_cnt"],"metadata":{"id":"cV0XK2OF4lHR","executionInfo":{"status":"ok","timestamp":1678919637363,"user_tz":240,"elapsed":50,"user":{"displayName":"Bill Power","userId":"17299628813846429758"}}},"execution_count":12,"outputs":[]},{"cell_type":"markdown","source":["## Balancing - Over-Sampling Method"],"metadata":{"id":"Ee2A1EDh0Zgd"}},{"cell_type":"code","source":["def max_size_oversampling_wr(examples):\n","  question_counts = dict()\n","  context_counts  = dict()\n","\n","  # for _, _, _, ctx, q in examples:\n","  for _, _, ctx, q in examples:\n","    if q not in question_counts:\n","      question_counts[q] = 0\n","    question_counts[q] += 1\n","    \n","    if ctx not in context_counts:\n","      context_counts[ctx] = 0\n","    context_counts[ctx] += 1\n","\n","  context_examples    = { k: [] for k in context_counts}\n","  context_populations = { k: [] for k in context_counts}\n","\n","  # for ccq_ts, ccq_am, y, ctx, q in examples:\n","  #   context_populations[ctx].append([ccq_ts, ccq_am, y])\n","  for ccq_str, y, ctx, q in examples:\n","    context_populations[ctx].append([ccq_str, y])\n","\n","  max_size = 0\n","  for k in context_populations:\n","    size_pop = len(context_populations[k])\n","    if size_pop > max_size:\n","      max_size = size_pop\n","\n","  for k in context_examples:\n","    while len(context_examples[k]) < max_size:\n","      context_examples[k].append(random.sample(context_populations[k], 1)[0])\n","\n","  example_tuples_max_sampled = []\n","  for k in context_examples:\n","    for ex in context_examples[k]:\n","      example_tuples_max_sampled.append(ex)\n","  return example_tuples_max_sampled"],"metadata":{"id":"g8b-jBO3zaM9","executionInfo":{"status":"ok","timestamp":1678919637364,"user_tz":240,"elapsed":47,"user":{"displayName":"Bill Power","userId":"17299628813846429758"}}},"execution_count":13,"outputs":[]},{"cell_type":"markdown","source":["## Create DataLoaders"],"metadata":{"id":"7EFQMMop0fyz"}},{"cell_type":"code","source":["def preprocess_sentences(df_content, balance=True):\n","  df_content = prepare_ccq_strs(df_content, contexts, questions)\n","  \n","  content_example_tuples = []\n","  def make_make_tuple(out_list):\n","    def make_tuple(row):\n","      out_list.append([\n","          row['ccq_str'],\n","          row['answer'],\n","          row['context_id'],\n","          row['question_id']\n","      ])\n","    return make_tuple\n","\n","  df_content.apply(make_make_tuple(content_example_tuples), axis=1)\n","\n","  if balance:\n","    tuples = max_size_oversampling_wr(content_example_tuples)\n","  else:\n","    tuples = content_example_tuples\n","\n","  sents  = [i[0] for i in tuples]\n","  labels = [i[1] for i in tuples]\n","  input_ids  = []\n","  attn_masks = []\n","  for sent in sents:\n","    enc_dict = tokenizer.encode_plus(\n","        sent,\n","        add_special_tokens = False,\n","        max_length = MAX_SEQ_LEN, \n","        pad_to_max_length = True,\n","        return_attention_mask = True,\n","        return_tensors = 'pt'\n","    )\n","\n","    input_ids.append(enc_dict['input_ids'])\n","    attn_masks.append(enc_dict['attention_mask'])\n","  \n","  input_ids = torch.cat(input_ids, dim = 0)\n","  attn_masks = torch.cat(attn_masks, dim = 0)\n","  labels = torch.tensor(labels)\n","\n","  return input_ids, attn_masks, labels"],"metadata":{"id":"at-9T_v0h60u","executionInfo":{"status":"ok","timestamp":1678919637366,"user_tz":240,"elapsed":47,"user":{"displayName":"Bill Power","userId":"17299628813846429758"}}},"execution_count":14,"outputs":[]},{"cell_type":"code","source":["# From: https://discuss.pytorch.org/t/how-to-enable-the-dataloader-to-sample-from-each-class-with-equal-probability/911/7\n","from sklearn.model_selection import StratifiedKFold\n","\n","class StratifiedBatchSampler:\n","    \"\"\"Stratified batch sampling\n","    Provides equal representation of target classes in each batch\n","    \"\"\"\n","    def __init__(self, y, batch_size, shuffle=True):\n","        # batch_size = batch_size-1 # FUTURE BILL - YOU DID THIS HACK\n","        y = torch.squeeze(y)\n","        if torch.is_tensor(y):\n","            y = y.numpy()\n","        assert len(y.shape) == 1, 'label array must be 1D'\n","        \n","        n_batches = int(len(y) / batch_size)\n","        self.skf = StratifiedKFold(n_splits=n_batches, shuffle=shuffle)\n","        self.X = torch.randn(len(y),1).numpy()\n","        self.y = y\n","        self.shuffle = shuffle\n","\n","    def __iter__(self):\n","        if self.shuffle:\n","            self.skf.random_state = torch.randint(0,int(1e8),size=()).item()\n","        for train_idx, test_idx in self.skf.split(self.X, self.y):\n","            yield test_idx\n","\n","    def __len__(self):\n","        return len(self.y)"],"metadata":{"id":"zwuPM0qzMW46","executionInfo":{"status":"ok","timestamp":1678919637368,"user_tz":240,"elapsed":44,"user":{"displayName":"Bill Power","userId":"17299628813846429758"}}},"execution_count":15,"outputs":[]},{"cell_type":"code","source":["from torch.utils.data import TensorDataset, DataLoader, RandomSampler, SequentialSampler\n","from sklearn.model_selection import train_test_split\n","\n","\n","def create_dataloaders(df_content, test_ratio, balance=True):\n","  token_ids, attention_masks, labels = preprocess_sentences(df_content, balance=balance)\n","  \n","  train_idx, test_idx = train_test_split(\n","      np.arange(len(labels)),\n","      test_size = test_ratio,\n","      shuffle = True,\n","      stratify = labels)\n","  \n","  train_set = TensorDataset(token_ids[train_idx], \n","                            attention_masks[train_idx], \n","                            labels[train_idx])\n","\n","  test_set = TensorDataset(token_ids[test_idx], \n","                           attention_masks[test_idx], \n","                           labels[test_idx])\n","\n","  train_dataloader = DataLoader(train_set,\n","                                batch_sampler=StratifiedBatchSampler(labels[train_idx],\n","                                                                 BATCH_SIZE))\n","\n","  test_dataloader = DataLoader(test_set,\n","                               batch_sampler=StratifiedBatchSampler(labels[test_idx],\n","                                                                 BATCH_SIZE))\n","\n","  return train_dataloader, test_dataloader"],"metadata":{"id":"wY3j6nyR0py9","executionInfo":{"status":"ok","timestamp":1678919637371,"user_tz":240,"elapsed":45,"user":{"displayName":"Bill Power","userId":"17299628813846429758"}}},"execution_count":16,"outputs":[]},{"cell_type":"markdown","source":["# Training/Evaluation Setup"],"metadata":{"id":"8FoP5ForAtkE"}},{"cell_type":"markdown","metadata":{"id":"h6ilu9ax8bze"},"source":["## Training and Evaluation Method"]},{"cell_type":"code","execution_count":17,"metadata":{"id":"f2D3fYj89Bpz","executionInfo":{"status":"ok","timestamp":1678919637372,"user_tz":240,"elapsed":42,"user":{"displayName":"Bill Power","userId":"17299628813846429758"}}},"outputs":[],"source":["from torch.optim import SGD"]},{"cell_type":"code","execution_count":18,"metadata":{"id":"MaoTTbX0BfNN","executionInfo":{"status":"ok","timestamp":1678919637373,"user_tz":240,"elapsed":42,"user":{"displayName":"Bill Power","userId":"17299628813846429758"}}},"outputs":[],"source":["# This needs to change to handle the one hot stuff. \n","def binary_acc(y_pred, y_test):\n","  # I think I just have to do the argmax?\n","  y_pred_tag = torch.argmax(y_pred)\n","  correct_results_sum = (y_pred_tag == y_test).sum().float()\n","  acc = correct_results_sum/float(len(y_pred))\n","  return acc"]},{"cell_type":"code","execution_count":19,"metadata":{"id":"ynT43r7n9s2P","executionInfo":{"status":"ok","timestamp":1678919637374,"user_tz":240,"elapsed":41,"user":{"displayName":"Bill Power","userId":"17299628813846429758"}}},"outputs":[],"source":["def train_and_evaluate(training_batches, test_set_batches, epochs, cuda_dev, model):\n","\n","  # optimizer = torch.optim.AdamW(model.parameters(), \n","  #                               lr = 0.001,\n","  #                               eps = 1e-08)\n","  \n","  optimizer = SGD(model.parameters(), lr=0.001, momentum=0.9)\n","\n","  train_accs = []\n","  test_accs  = [[] for _ in test_set_batches]\n","  for epoch in tqdm(range(epochs), unit=\"epoch\"):\n","    model.train()\n","    \n","    batch_accs = []\n","    for batch in training_batches:\n","      batch = tuple(t.to(cuda_dev) for t in batch)\n","      batch_t, batch_am, labels = batch\n","\n","      optimizer.zero_grad()\n","      out = model(batch_t, attention_mask=batch_am, labels=labels)\n","      out.loss.backward()\n","      optimizer.step()\n","      batch_accs.append(binary_acc(out.logits, labels))\n","\n","    train_accs.append(sum(batch_accs)/float(len(batch_accs)))\n","\n","    model.eval()\n","    for t_idx, test_batches in enumerate(test_set_batches):\n","      test_batch_accs = []\n","      for test_batch in test_batches:\n","        test_batch = tuple(t.to(cuda_dev) for t in test_batch)\n","        test_batch_t, test_batch_am, test_labels = test_batch\n","\n","        test_out = model(input_ids=test_batch_t, \n","                         attention_mask=test_batch_am, \n","                         labels=test_labels)\n","        \n","        test_batch_accs.append(binary_acc(test_out.logits, test_labels))\n","              \n","      test_accs[t_idx].append(sum(test_batch_accs)/float(len(test_batch_accs)))\n","\n","  return train_accs, test_accs, model"]},{"cell_type":"markdown","source":["# Experiment\n"],"metadata":{"id":"0EEfqSGktDTk"}},{"cell_type":"markdown","source":["Here we want to see the impact on the baseline model. The following code is taken from the AQA 05 script. \n","\n","We know this ran using the data shape and model, so any errors should just be due to our changes to support fine-tuning. "],"metadata":{"id":"awiZgm9atGTa"}},{"cell_type":"code","source":["# A3_majplus_train, A3_majplus_test = create_dataloaders(content_a3_majplus, \n","#                                                         0.2,\n","#                                                         balance=True)\n","\n","A3_fa_train, A3_fa_test = create_dataloaders(content_a3_fa, \n","                                                        0.2,\n","                                                        balance=True)\n","\n","# Treat A2-FA data as the A2 test data. Already have this. \n","# We want to create a validation set, so lets divide the A2-FA data\n","# into two sets of data. We'll use one to train, and one to validate\n","# across all the experiments. 50/50 seems good?\n","A2_fa_train, A2_fa_test = create_dataloaders(content_a2_fa, 0.2, balance=False)\n","\n","# train/eval A3-model on A3 Maj+ training data\n","#   - Pass in A3 test data\n","#   - Pass in A2-FA test data - Does it agree with the FA?\n","test_batches = [\n","  A3_fa_test,\n","  A2_fa_test\n","]"],"metadata":{"id":"amd9rLV6tLhg","executionInfo":{"status":"ok","timestamp":1678919642684,"user_tz":240,"elapsed":5348,"user":{"displayName":"Bill Power","userId":"17299628813846429758"}},"colab":{"base_uri":"https://localhost:8080/"},"outputId":"972745f3-e63e-4caa-cd05-5a980c46f4e4"},"execution_count":20,"outputs":[{"output_type":"stream","name":"stderr","text":["Truncation was not explicitly activated but `max_length` is provided a specific value, please use `truncation=True` to explicitly truncate examples to max length. Defaulting to 'longest_first' truncation strategy. If you encode pairs of sequences (GLUE-style) with the tokenizer you can select this strategy more precisely by providing a specific strategy to `truncation`.\n"]}]},{"cell_type":"code","source":["print(torch.cuda.get_device_name(0))\n","cuda_name = torch.cuda.get_device_name(0)\n","cuda_dev  = torch.device(\"cuda:0\")"],"metadata":{"id":"7NbZSkMC9NR1","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1678919643355,"user_tz":240,"elapsed":11,"user":{"displayName":"Bill Power","userId":"17299628813846429758"}},"outputId":"36d523b8-17b0-4f68-ec25-3756ffadee8e"},"execution_count":21,"outputs":[{"output_type":"stream","name":"stdout","text":["NVIDIA A100-SXM4-40GB\n"]}]},{"cell_type":"code","source":["bert_sc = ppb.BertForSequenceClassification.from_pretrained('bert-base-uncased',\n","    num_labels = 2,\n","    output_attentions = False,\n","    output_hidden_states = False)\n","bert_sc.to(cuda_dev)\n","\n","train_acc_pre, test_accs_pre, a3_model = train_and_evaluate(A3_fa_train, \n","                                                            test_batches,\n","                                                            EPOCHS,\n","                                                            cuda_dev,\n","                                                            bert_sc)"],"metadata":{"id":"yMyaKTYQLUKd","colab":{"base_uri":"https://localhost:8080/","height":220,"referenced_widgets":["8de759ae986d42b3801aaf0e29c42477","50b1933febaa435ebcc09b3a3eb2daaa","2df9bd8f6dbb4462806324ee79cbb20c","c9fa3ff3a2a44c289e7c726c6254aa95","26b5a402ffe7429095075781816f001d","fb8fa158924e4fb8ae3294ddd1ad1076","8eba1651e1ae4318abb164f47bb8b24d","d05e32252fc94697b9003582ce68fcca","c44f3851f2a147218396fafa557f8c2d","8b082aaa9f8b45d783c1ce08ccd01f7b","44ede1df37c141ee8fa5d1d11c98ed66","815faa84f32f4c7288b116586c62ce1d","30215e3f997345e8b68b8cddd018d051","d823f6cd2f3b46fcb4bd3d62608e6c06","125a413d1b1c40639d3d4e2a85ed345a","937d8e12f2a342db9d0b37bb0d92fd03","77b6df5b5f3847d8bff216841ac100cc","a715fb87bf2c42a892c688c2be435ddf","29f931fcec784938a437805b17f944a3","21566338d83f41e9a4ba22a7f0bab4d3","20aa6b4c7c9d4e8dbaec26c9c82e50f4","f695a4b20ba14757bfa80a89218d152c","5922fc74571d42d2be266417a4d1fd10","650dcc507e354563bfdf5e1dce357803","b95f71329b984b75ad35624b4a58de71","c59a841251ef4d5980a4e813554403e6","e00a5c1e322e4a789eb718066fcbc968","bd78a6b833ad4ff3a60e2c1a46150933","abc90156a25544b9a09576a4cbba782e","44a9ae79b7ac4d36b26a8b1da7f17d34","14e5ab4676dd4ea58c2bbe090191f9e0","409de7ba1c1546f9aea33c7681fe811f","788c6a1a1f754194bc7bbce027107b9e"]},"executionInfo":{"status":"ok","timestamp":1678920596242,"user_tz":240,"elapsed":306174,"user":{"displayName":"Bill Power","userId":"17299628813846429758"}},"outputId":"057dfe51-9e7c-4c48-8c52-568cb3399c54"},"execution_count":22,"outputs":[{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"8de759ae986d42b3801aaf0e29c42477","version_major":2,"version_minor":0},"text/plain":["Downloading (…)lve/main/config.json:   0%|          | 0.00/570 [00:00<?, ?B/s]"]},"metadata":{},"output_type":"display_data"},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"815faa84f32f4c7288b116586c62ce1d","version_major":2,"version_minor":0},"text/plain":["Downloading pytorch_model.bin:   0%|          | 0.00/440M [00:00<?, ?B/s]"]},"metadata":{},"output_type":"display_data"},{"metadata":{"tags":null},"name":"stderr","output_type":"stream","text":["Some weights of the model checkpoint at bert-base-uncased were not used when initializing BertForSequenceClassification: ['cls.predictions.transform.dense.weight', 'cls.predictions.decoder.weight', 'cls.predictions.transform.dense.bias', 'cls.seq_relationship.bias', 'cls.predictions.bias', 'cls.predictions.transform.LayerNorm.weight', 'cls.predictions.transform.LayerNorm.bias', 'cls.seq_relationship.weight']\n","- This IS expected if you are initializing BertForSequenceClassification from the checkpoint of a model trained on another task or with another architecture (e.g. initializing a BertForSequenceClassification model from a BertForPreTraining model).\n","- This IS NOT expected if you are initializing BertForSequenceClassification from the checkpoint of a model that you expect to be exactly identical (initializing a BertForSequenceClassification model from a BertForSequenceClassification model).\n","Some weights of BertForSequenceClassification were not initialized from the model checkpoint at bert-base-uncased and are newly initialized: ['classifier.bias', 'classifier.weight']\n","You should probably TRAIN this model on a down-stream task to be able to use it for predictions and inference.\n"]},{"data":{"application/vnd.jupyter.widget-view+json":{"model_id":"5922fc74571d42d2be266417a4d1fd10","version_major":2,"version_minor":0},"text/plain":["  0%|          | 0/200 [00:00<?, ?epoch/s]"]},"metadata":{},"output_type":"display_data"}]},{"cell_type":"code","source":["RESULTS_NOTE = \"usingBS_combined_ctxq_wSGD_00\"\n","\n","results = [train_acc_pre, test_accs_pre]\n","with open(f\"{RESULTS_FN_SLUG}_{RESULTS_NOTE}.p\", 'wb') as f:\n","  pickle.dump(results, f)\n","\n","upload_file_to_gcs(f\"{RESULTS_FN_SLUG}_{RESULTS_NOTE}.p\", f\"{RESULTS_FN_SLUG}_{RESULTS_NOTE}.p\")"],"metadata":{"id":"Do3zAN43816w","executionInfo":{"status":"ok","timestamp":1678920599652,"user_tz":240,"elapsed":3412,"user":{"displayName":"Bill Power","userId":"17299628813846429758"}}},"execution_count":23,"outputs":[]},{"cell_type":"markdown","source":["#### Results - Baseline Epoch Losses"],"metadata":{"id":"xmQldHMTWfl-"}},{"cell_type":"markdown","source":["Here we just want to see the per-epoch training and test losses. We have multiple sets of test data to consider (2 for now). Need a graph that shows all 3 lines. \n","\n","This will give a baseline to compare against when we look at the effect of online training the model later (EXP1)."],"metadata":{"id":"LD0tWMduZFiK"}},{"cell_type":"code","source":["import matplotlib.pyplot as plt\n","%matplotlib notebook\n","%matplotlib inline"],"metadata":{"id":"Uo-1hODT9H9A","executionInfo":{"status":"ok","timestamp":1678920599662,"user_tz":240,"elapsed":6,"user":{"displayName":"Bill Power","userId":"17299628813846429758"}}},"execution_count":24,"outputs":[]},{"cell_type":"code","source":["cutoff = 100\n","\n","data_set = [train_acc_pre]\n","data_set.extend(test_accs_pre)\n","\n","labels = [\"A3M+ Train\", \"A3M+ Test\", \"A2 FA Test\"]\n","colors = [\"tab:red\", \"tab:green\", \"tab:blue\"]\n","\n","for l, test, color in zip(labels, data_set, colors):\n","\n","  test = [i.cpu() for i in test]\n","  plt.plot(test[:cutoff], label=f\"{l}\", color=color)\n","\n","plt.title(\"Baseline Model Test Acc's\")\n","plt.legend(loc='lower left')\n","plt.show()\n","\n","plt_fn = f\"{RESULTS_FN_SLUG}_{RESULTS_NOTE}_baseline.png\"\n","plt.savefig(plt_fn)\n","upload_file_to_gcs(plt_fn, plt_fn)"],"metadata":{"id":"2gIe1FpyWd8f","colab":{"base_uri":"https://localhost:8080/","height":298},"executionInfo":{"status":"ok","timestamp":1678920601486,"user_tz":240,"elapsed":1829,"user":{"displayName":"Bill Power","userId":"17299628813846429758"}},"outputId":"df3abbb0-a5fe-46ba-fe26-0a703f9f54d6"},"execution_count":25,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 432x288 with 1 Axes>"],"image/png":"\n"},"metadata":{"needs_background":"light"}},{"output_type":"display_data","data":{"text/plain":["<Figure size 432x288 with 0 Axes>"]},"metadata":{}}]},{"cell_type":"markdown","source":["Ouch. Need to iterate. That's a rough curve. Do I really need the CLS and SEP tokens for this LM? I think they were needed for the full BERT, but I thought DistillBERT let me get away without them? I should ping Jumanah to see if she has a better idea. "],"metadata":{"id":"bqX6nTzfJFHK"}}]}