{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"collapsed_sections":["ybu8iEZskb-3","0fSMAjHpkb-4","glKP3nrhkb-6","Df9iIZyhkb--","tzRLOi-Jkb-_","TBwBOc1LJWSS","YEniTxLUPL-K","zUUz0lb2yLAg","Ee2A1EDh0Zgd","rPCF7MZNzOAT"],"toc_visible":true,"machine_shape":"hm","authorship_tag":"ABX9TyMvXtgobrsViIFkaxE3PU7x"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"},"accelerator":"GPU","gpuClass":"premium","widgets":{"application/vnd.jupyter.widget-state+json":{"2f943c0859294f1996ad7446d59f9875":{"model_module":"@jupyter-widgets/controls","model_name":"HBoxModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HBoxModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HBoxView","box_style":"","children":["IPY_MODEL_5c49585ec04b4e959982da7fa03c9b95","IPY_MODEL_b8d1018966384ba48b1a169eedf17e3c","IPY_MODEL_6887223f465d4ed78b9e73f86a4c4b63"],"layout":"IPY_MODEL_3adfd4fffe544b48b50b4930ef78b662"}},"5c49585ec04b4e959982da7fa03c9b95":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_2bb05b51a59a402ea6e32e466ee7a942","placeholder":"​","style":"IPY_MODEL_b83fed0069ee4b3ca9bbe71042239c82","value":"Downloading (…)solve/main/vocab.txt: 100%"}},"b8d1018966384ba48b1a169eedf17e3c":{"model_module":"@jupyter-widgets/controls","model_name":"FloatProgressModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"FloatProgressModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"ProgressView","bar_style":"success","description":"","description_tooltip":null,"layout":"IPY_MODEL_f2df3a3edf7e42499d01e93e621a89c0","max":231508,"min":0,"orientation":"horizontal","style":"IPY_MODEL_121d4e9a162c4a2797c56ba5c6d71e86","value":231508}},"6887223f465d4ed78b9e73f86a4c4b63":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_b95c944996ba4c9abb1f2e4088d075f1","placeholder":"​","style":"IPY_MODEL_105d3923ec684dbf827233d47029b850","value":" 232k/232k [00:00&lt;00:00, 2.89MB/s]"}},"3adfd4fffe544b48b50b4930ef78b662":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"2bb05b51a59a402ea6e32e466ee7a942":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"b83fed0069ee4b3ca9bbe71042239c82":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"f2df3a3edf7e42499d01e93e621a89c0":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"121d4e9a162c4a2797c56ba5c6d71e86":{"model_module":"@jupyter-widgets/controls","model_name":"ProgressStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"ProgressStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","bar_color":null,"description_width":""}},"b95c944996ba4c9abb1f2e4088d075f1":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"105d3923ec684dbf827233d47029b850":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"179820f6f0764af8ab1413582f4048cc":{"model_module":"@jupyter-widgets/controls","model_name":"HBoxModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HBoxModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HBoxView","box_style":"","children":["IPY_MODEL_bc70b8450e034b959ee624f6b75fa3d6","IPY_MODEL_5ec94cfec05746a0bccd6f82ad4c1c85","IPY_MODEL_23f577fd22ee41d59bf092508073021a"],"layout":"IPY_MODEL_54717c8413a942c48e2cb291534261e0"}},"bc70b8450e034b959ee624f6b75fa3d6":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_80e716264d644641b2d13056b2a38126","placeholder":"​","style":"IPY_MODEL_d7ebc157aaae49669c7533ebee031593","value":"Downloading (…)okenizer_config.json: 100%"}},"5ec94cfec05746a0bccd6f82ad4c1c85":{"model_module":"@jupyter-widgets/controls","model_name":"FloatProgressModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"FloatProgressModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"ProgressView","bar_style":"success","description":"","description_tooltip":null,"layout":"IPY_MODEL_94f36e0156e54f24aed2a7ea20f85d5d","max":28,"min":0,"orientation":"horizontal","style":"IPY_MODEL_7d88b19ad73c4037924284b4bc46b641","value":28}},"23f577fd22ee41d59bf092508073021a":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_9c3c18998b034acaba202634c7dc7fd3","placeholder":"​","style":"IPY_MODEL_e042abad39d34daaaf3e7b939d360641","value":" 28.0/28.0 [00:00&lt;00:00, 1.91kB/s]"}},"54717c8413a942c48e2cb291534261e0":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"80e716264d644641b2d13056b2a38126":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"d7ebc157aaae49669c7533ebee031593":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"94f36e0156e54f24aed2a7ea20f85d5d":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"7d88b19ad73c4037924284b4bc46b641":{"model_module":"@jupyter-widgets/controls","model_name":"ProgressStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"ProgressStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","bar_color":null,"description_width":""}},"9c3c18998b034acaba202634c7dc7fd3":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"e042abad39d34daaaf3e7b939d360641":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"f9be60d9eb534f50bda80f7ef7da90c3":{"model_module":"@jupyter-widgets/controls","model_name":"HBoxModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HBoxModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HBoxView","box_style":"","children":["IPY_MODEL_86b85dbf44fa4b9d8912a0b36863d5ce","IPY_MODEL_719c951928544d039d1fda28bac198ab","IPY_MODEL_f594185c6e814986bb3c37219ba9b1c1"],"layout":"IPY_MODEL_fef2ec84633d43939435963de8dff140"}},"86b85dbf44fa4b9d8912a0b36863d5ce":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_aeb729c9a3f34e39ac3002135b42e02e","placeholder":"​","style":"IPY_MODEL_dc917ddda459402d95bb7f714b2b403b","value":"Downloading (…)lve/main/config.json: 100%"}},"719c951928544d039d1fda28bac198ab":{"model_module":"@jupyter-widgets/controls","model_name":"FloatProgressModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"FloatProgressModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"ProgressView","bar_style":"success","description":"","description_tooltip":null,"layout":"IPY_MODEL_4dd0f6e187084367b49062dec1889cfa","max":483,"min":0,"orientation":"horizontal","style":"IPY_MODEL_b27d4b0474c642f287e04cd4740e9fd5","value":483}},"f594185c6e814986bb3c37219ba9b1c1":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_37b3e1a2d20d4722920f3f245b285198","placeholder":"​","style":"IPY_MODEL_19d677424420449484d7e45c381a8bdd","value":" 483/483 [00:00&lt;00:00, 36.2kB/s]"}},"fef2ec84633d43939435963de8dff140":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"aeb729c9a3f34e39ac3002135b42e02e":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"dc917ddda459402d95bb7f714b2b403b":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"4dd0f6e187084367b49062dec1889cfa":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"b27d4b0474c642f287e04cd4740e9fd5":{"model_module":"@jupyter-widgets/controls","model_name":"ProgressStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"ProgressStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","bar_color":null,"description_width":""}},"37b3e1a2d20d4722920f3f245b285198":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"19d677424420449484d7e45c381a8bdd":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"557bab4cebd445f9a347b5f9f85e8e91":{"model_module":"@jupyter-widgets/controls","model_name":"HBoxModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HBoxModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HBoxView","box_style":"","children":["IPY_MODEL_6291af4dc6d0464f8134a61d5c015cd9","IPY_MODEL_6f08df3f02984f0183c51de3310b1574","IPY_MODEL_64a99dd2253c47db941a4fb4559e0d71"],"layout":"IPY_MODEL_146e23d91d4c4076b45255bc5df69b72"}},"6291af4dc6d0464f8134a61d5c015cd9":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_c012b83969874e99a322629837530dbb","placeholder":"​","style":"IPY_MODEL_805e5a5e937843ad9988b57853b235c9","value":"Downloading (…)&quot;pytorch_model.bin&quot;;: 100%"}},"6f08df3f02984f0183c51de3310b1574":{"model_module":"@jupyter-widgets/controls","model_name":"FloatProgressModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"FloatProgressModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"ProgressView","bar_style":"success","description":"","description_tooltip":null,"layout":"IPY_MODEL_554b3236be944ae2b6ac720bc6987ca3","max":267967963,"min":0,"orientation":"horizontal","style":"IPY_MODEL_7e3a65b7d4a14f4cb3f05234739608cd","value":267967963}},"64a99dd2253c47db941a4fb4559e0d71":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_d2a9eb758dad44ebb50b84adabf1fc81","placeholder":"​","style":"IPY_MODEL_524351ac728d4c6a8cc5bb8a6701ee41","value":" 268M/268M [00:02&lt;00:00, 137MB/s]"}},"146e23d91d4c4076b45255bc5df69b72":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"c012b83969874e99a322629837530dbb":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"805e5a5e937843ad9988b57853b235c9":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"554b3236be944ae2b6ac720bc6987ca3":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"7e3a65b7d4a14f4cb3f05234739608cd":{"model_module":"@jupyter-widgets/controls","model_name":"ProgressStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"ProgressStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","bar_color":null,"description_width":""}},"d2a9eb758dad44ebb50b84adabf1fc81":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"524351ac728d4c6a8cc5bb8a6701ee41":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"648ff2a4b4b840bcb7129368ef3140b9":{"model_module":"@jupyter-widgets/controls","model_name":"HBoxModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HBoxModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HBoxView","box_style":"","children":["IPY_MODEL_88f7146f4d574bc5a6b40446e12579e5","IPY_MODEL_51381d31a49c47aa842522be68ba4338","IPY_MODEL_1e5dcfd07a9f4efdb2a241a0a3d1066b"],"layout":"IPY_MODEL_e3d9b69995bc4526836ce2b2ac4784fe"}},"88f7146f4d574bc5a6b40446e12579e5":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_ed49d4e1960448dcaab2d1b6d1ebdfe8","placeholder":"​","style":"IPY_MODEL_183d90021b6e4973bb875aa9b653becf","value":"100%"}},"51381d31a49c47aa842522be68ba4338":{"model_module":"@jupyter-widgets/controls","model_name":"FloatProgressModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"FloatProgressModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"ProgressView","bar_style":"success","description":"","description_tooltip":null,"layout":"IPY_MODEL_1ece6f4e46774b6dbd57ba67bf49989d","max":100,"min":0,"orientation":"horizontal","style":"IPY_MODEL_02c9083835b344f3a8f3f401ebebc066","value":100}},"1e5dcfd07a9f4efdb2a241a0a3d1066b":{"model_module":"@jupyter-widgets/controls","model_name":"HTMLModel","model_module_version":"1.5.0","state":{"_dom_classes":[],"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"HTMLModel","_view_count":null,"_view_module":"@jupyter-widgets/controls","_view_module_version":"1.5.0","_view_name":"HTMLView","description":"","description_tooltip":null,"layout":"IPY_MODEL_7570902ff9b64e00adc1bb8b81d4aad7","placeholder":"​","style":"IPY_MODEL_e4b2a5b122bf4c25b0790440b061043e","value":" 100/100 [53:15&lt;00:00, 31.92s/epoch]"}},"e3d9b69995bc4526836ce2b2ac4784fe":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"ed49d4e1960448dcaab2d1b6d1ebdfe8":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"183d90021b6e4973bb875aa9b653becf":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}},"1ece6f4e46774b6dbd57ba67bf49989d":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"02c9083835b344f3a8f3f401ebebc066":{"model_module":"@jupyter-widgets/controls","model_name":"ProgressStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"ProgressStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","bar_color":null,"description_width":""}},"7570902ff9b64e00adc1bb8b81d4aad7":{"model_module":"@jupyter-widgets/base","model_name":"LayoutModel","model_module_version":"1.2.0","state":{"_model_module":"@jupyter-widgets/base","_model_module_version":"1.2.0","_model_name":"LayoutModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"LayoutView","align_content":null,"align_items":null,"align_self":null,"border":null,"bottom":null,"display":null,"flex":null,"flex_flow":null,"grid_area":null,"grid_auto_columns":null,"grid_auto_flow":null,"grid_auto_rows":null,"grid_column":null,"grid_gap":null,"grid_row":null,"grid_template_areas":null,"grid_template_columns":null,"grid_template_rows":null,"height":null,"justify_content":null,"justify_items":null,"left":null,"margin":null,"max_height":null,"max_width":null,"min_height":null,"min_width":null,"object_fit":null,"object_position":null,"order":null,"overflow":null,"overflow_x":null,"overflow_y":null,"padding":null,"right":null,"top":null,"visibility":null,"width":null}},"e4b2a5b122bf4c25b0790440b061043e":{"model_module":"@jupyter-widgets/controls","model_name":"DescriptionStyleModel","model_module_version":"1.5.0","state":{"_model_module":"@jupyter-widgets/controls","_model_module_version":"1.5.0","_model_name":"DescriptionStyleModel","_view_count":null,"_view_module":"@jupyter-widgets/base","_view_module_version":"1.2.0","_view_name":"StyleView","description_width":""}}}}},"cells":[{"cell_type":"markdown","metadata":{"id":"AbeAB8Hokb-2"},"source":["# Setup"]},{"cell_type":"markdown","metadata":{"id":"ybu8iEZskb-3"},"source":["## Imports"]},{"cell_type":"code","execution_count":1,"metadata":{"id":"JiAEt7P6kb-3","executionInfo":{"status":"ok","timestamp":1674767033561,"user_tz":300,"elapsed":4232,"user":{"displayName":"Bill Power","userId":"17299628813846429758"}}},"outputs":[],"source":["import os\n","import numpy as np\n","import pandas as pd\n","from sklearn.model_selection import train_test_split\n","from sklearn.linear_model import LogisticRegression\n","from sklearn.model_selection import GridSearchCV\n","from sklearn.model_selection import cross_val_score\n","import torch\n","import random\n","import warnings\n","warnings.filterwarnings('ignore')\n","\n","from tqdm.notebook import tqdm\n","import pickle"]},{"cell_type":"markdown","metadata":{"id":"0fSMAjHpkb-4"},"source":["## Constants"]},{"cell_type":"code","execution_count":2,"metadata":{"id":"UNU4HLNZkb-5","executionInfo":{"status":"ok","timestamp":1674767033562,"user_tz":300,"elapsed":8,"user":{"displayName":"Bill Power","userId":"17299628813846429758"}}},"outputs":[],"source":["RESULTS_FN_SLUG = \"AQA06_01_results\"\n","\n","GCS_APP_ID = \"aqa-research\"\n","GCS_BUCKET = \"dabi-aqa-data-00\"\n","\n","FN_QUESTIONS = \"questions_01.csv\"\n","FN_CONTEXTS  = \"contexts_01.csv\"\n","\n","FN_A2_RAW = \"a2_raw.csv\"\n","FN_A2_FA  = \"a2_gs.csv\"\n","FN_A3_FA  = \"a3_gs.csv\"\n","FN_A3_MAJ = \"a3_con.csv\"\n","\n","MAX_SEQ_LEN = 128\n","\n","EPOCHS = 100\n","BATCH_SIZE = 16\n","TEST_FRAC = 0.1\n","\n","RAND_SEED = 4242"]},{"cell_type":"markdown","metadata":{"id":"glKP3nrhkb-6"},"source":["## GCS Auth - Input Needed"]},{"cell_type":"code","execution_count":3,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":12074,"status":"ok","timestamp":1674767045630,"user":{"displayName":"Bill Power","userId":"17299628813846429758"},"user_tz":300},"id":"xwxl9-b4kb-7","outputId":"5ddf8fd5-ac8e-46f9-f78b-854d6b4892aa"},"outputs":[{"output_type":"stream","name":"stdout","text":["Go to the following link in your browser:\n","\n","    https://accounts.google.com/o/oauth2/auth?response_type=code&client_id=32555940559.apps.googleusercontent.com&redirect_uri=https%3A%2F%2Fsdk.cloud.google.com%2Fauthcode.html&scope=openid+https%3A%2F%2Fwww.googleapis.com%2Fauth%2Fuserinfo.email+https%3A%2F%2Fwww.googleapis.com%2Fauth%2Fcloud-platform+https%3A%2F%2Fwww.googleapis.com%2Fauth%2Fappengine.admin+https%3A%2F%2Fwww.googleapis.com%2Fauth%2Fsqlservice.login+https%3A%2F%2Fwww.googleapis.com%2Fauth%2Fcompute+https%3A%2F%2Fwww.googleapis.com%2Fauth%2Faccounts.reauth&state=eRD6gCU3fUr1SJewia6eRcFf3NMxYw&prompt=consent&access_type=offline&code_challenge=AlH-GwO959dV0IELNfE6ekKCAt30qerZBoe9D5QDyxw&code_challenge_method=S256\n","\n","Enter authorization code: 4/0AWtgzh7jkHD1GLMcjSfAZqR3NPYl0Ol6I6cjxraSj6-nQmkFtVigGkenecseEjNiBREf1g\n","\n","You are now logged in as [willpowe@gmail.com].\n","Your current project is [None].  You can change this setting by running:\n","  $ gcloud config set project PROJECT_ID\n"]}],"source":["!gcloud auth login --launch-browser"]},{"cell_type":"code","execution_count":4,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":845,"status":"ok","timestamp":1674767046468,"user":{"displayName":"Bill Power","userId":"17299628813846429758"},"user_tz":300},"id":"SEQdfjlikb-7","outputId":"bc18a946-dcfe-4121-ba1d-9060e268acd1"},"outputs":[{"output_type":"stream","name":"stdout","text":["Updated property [core/project].\n"]}],"source":["!gcloud config set project {GCS_APP_ID}"]},{"cell_type":"code","execution_count":5,"metadata":{"id":"1x_hDs2gkb-8","executionInfo":{"status":"ok","timestamp":1674767046470,"user_tz":300,"elapsed":26,"user":{"displayName":"Bill Power","userId":"17299628813846429758"}}},"outputs":[],"source":["def download_file_from_gcs(src_fn, dest_fn):\n","  dest = f\"/content/{dest_fn}\"\n","  dl_command = f\"gsutil -m cp gs://{GCS_BUCKET}/{src_fn} {dest}\"\n","  os.system(dl_command)\n","\n","def upload_file_to_gcs(src_fn, dest_fn):\n","  dest_url = \"{}/{}\".format(GCS_BUCKET, dest_fn)\n","  ul_command = \"gsutil -m cp {} gs://{}\".format(src_fn, dest_url)\n","  os.system(ul_command)"]},{"cell_type":"markdown","metadata":{"id":"Df9iIZyhkb--"},"source":["## Raw Data"]},{"cell_type":"code","execution_count":6,"metadata":{"id":"YOIG4PnXkb-_","executionInfo":{"status":"ok","timestamp":1674767057812,"user_tz":300,"elapsed":11362,"user":{"displayName":"Bill Power","userId":"17299628813846429758"}}},"outputs":[],"source":["download_file_from_gcs(FN_QUESTIONS, FN_QUESTIONS)\n","download_file_from_gcs(FN_CONTEXTS, FN_CONTEXTS)\n","\n","download_file_from_gcs(FN_A2_RAW, FN_A2_RAW)\n","download_file_from_gcs(FN_A2_FA, FN_A2_FA)\n","download_file_from_gcs(FN_A3_FA, FN_A3_FA)\n","download_file_from_gcs(FN_A3_MAJ, FN_A3_MAJ)"]},{"cell_type":"markdown","metadata":{"id":"tzRLOi-Jkb-_"},"source":["## BERT Setup"]},{"cell_type":"code","execution_count":7,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"elapsed":9529,"status":"ok","timestamp":1674767067318,"user":{"displayName":"Bill Power","userId":"17299628813846429758"},"user_tz":300},"id":"C_lWu_g_kb_A","outputId":"81fae253-7ffd-4eb9-813e-0f300b0609ef"},"outputs":[{"output_type":"stream","name":"stdout","text":["Looking in indexes: https://pypi.org/simple, https://us-python.pkg.dev/colab-wheels/public/simple/\n","Collecting transformers\n","  Downloading transformers-4.26.0-py3-none-any.whl (6.3 MB)\n","\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m6.3/6.3 MB\u001b[0m \u001b[31m54.3 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25hRequirement already satisfied: pyyaml>=5.1 in /usr/local/lib/python3.8/dist-packages (from transformers) (6.0)\n","Requirement already satisfied: filelock in /usr/local/lib/python3.8/dist-packages (from transformers) (3.9.0)\n","Requirement already satisfied: numpy>=1.17 in /usr/local/lib/python3.8/dist-packages (from transformers) (1.21.6)\n","Requirement already satisfied: requests in /usr/local/lib/python3.8/dist-packages (from transformers) (2.25.1)\n","Collecting tokenizers!=0.11.3,<0.14,>=0.11.1\n","  Downloading tokenizers-0.13.2-cp38-cp38-manylinux_2_17_x86_64.manylinux2014_x86_64.whl (7.6 MB)\n","\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m7.6/7.6 MB\u001b[0m \u001b[31m106.1 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25hRequirement already satisfied: tqdm>=4.27 in /usr/local/lib/python3.8/dist-packages (from transformers) (4.64.1)\n","Requirement already satisfied: regex!=2019.12.17 in /usr/local/lib/python3.8/dist-packages (from transformers) (2022.6.2)\n","Collecting huggingface-hub<1.0,>=0.11.0\n","  Downloading huggingface_hub-0.12.0-py3-none-any.whl (190 kB)\n","\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m190.3/190.3 KB\u001b[0m \u001b[31m23.6 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25hRequirement already satisfied: packaging>=20.0 in /usr/local/lib/python3.8/dist-packages (from transformers) (21.3)\n","Requirement already satisfied: typing-extensions>=3.7.4.3 in /usr/local/lib/python3.8/dist-packages (from huggingface-hub<1.0,>=0.11.0->transformers) (4.4.0)\n","Requirement already satisfied: pyparsing!=3.0.5,>=2.0.2 in /usr/local/lib/python3.8/dist-packages (from packaging>=20.0->transformers) (3.0.9)\n","Requirement already satisfied: chardet<5,>=3.0.2 in /usr/local/lib/python3.8/dist-packages (from requests->transformers) (4.0.0)\n","Requirement already satisfied: certifi>=2017.4.17 in /usr/local/lib/python3.8/dist-packages (from requests->transformers) (2022.12.7)\n","Requirement already satisfied: urllib3<1.27,>=1.21.1 in /usr/local/lib/python3.8/dist-packages (from requests->transformers) (1.24.3)\n","Requirement already satisfied: idna<3,>=2.5 in /usr/local/lib/python3.8/dist-packages (from requests->transformers) (2.10)\n","Installing collected packages: tokenizers, huggingface-hub, transformers\n","Successfully installed huggingface-hub-0.12.0 tokenizers-0.13.2 transformers-4.26.0\n"]}],"source":["!pip install transformers"]},{"cell_type":"code","execution_count":8,"metadata":{"id":"VA_ZnC0dkb_A","executionInfo":{"status":"ok","timestamp":1674767069677,"user_tz":300,"elapsed":2377,"user":{"displayName":"Bill Power","userId":"17299628813846429758"}}},"outputs":[],"source":["import transformers as ppb"]},{"cell_type":"markdown","source":["## Random Seeds"],"metadata":{"id":"TBwBOc1LJWSS"}},{"cell_type":"code","source":["random.seed(RAND_SEED)\n","np.random.seed(RAND_SEED)\n","torch.manual_seed(RAND_SEED)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"HNrkkYVqJV62","executionInfo":{"status":"ok","timestamp":1674767069679,"user_tz":300,"elapsed":14,"user":{"displayName":"Bill Power","userId":"17299628813846429758"}},"outputId":"75ffd78c-805a-424b-c1c2-38e871472f0f"},"execution_count":9,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<torch._C.Generator at 0x7f9d1fd60170>"]},"metadata":{},"execution_count":9}]},{"cell_type":"markdown","metadata":{"id":"YEniTxLUPL-K"},"source":["# Data"]},{"cell_type":"markdown","source":["## Content Dataframes"],"metadata":{"id":"zUUz0lb2yLAg"}},{"cell_type":"code","execution_count":10,"metadata":{"id":"WuLRs3tXkb_C","executionInfo":{"status":"ok","timestamp":1674767088470,"user_tz":300,"elapsed":339,"user":{"displayName":"Bill Power","userId":"17299628813846429758"}}},"outputs":[],"source":["questions = pd.read_csv(FN_QUESTIONS)\n","contexts  = pd.read_csv(FN_CONTEXTS)\n","\n","content_a2_raw = pd.read_csv(FN_A2_RAW)\n","content_a2_fa  = pd.read_csv(FN_A2_FA)\n","content_a3_fa  = pd.read_csv(FN_A3_FA)\n","content_a3_maj = pd.read_csv(FN_A3_MAJ)\n","\n","content_a3_majplus = pd.concat([content_a3_fa, content_a3_maj])"]},{"cell_type":"markdown","metadata":{"id":"kNQBRgQkkb_B"},"source":["## Transformer Init\n","\n"]},{"cell_type":"code","execution_count":11,"metadata":{"id":"wrotnPAHkb_C","colab":{"base_uri":"https://localhost:8080/","height":113,"referenced_widgets":["2f943c0859294f1996ad7446d59f9875","5c49585ec04b4e959982da7fa03c9b95","b8d1018966384ba48b1a169eedf17e3c","6887223f465d4ed78b9e73f86a4c4b63","3adfd4fffe544b48b50b4930ef78b662","2bb05b51a59a402ea6e32e466ee7a942","b83fed0069ee4b3ca9bbe71042239c82","f2df3a3edf7e42499d01e93e621a89c0","121d4e9a162c4a2797c56ba5c6d71e86","b95c944996ba4c9abb1f2e4088d075f1","105d3923ec684dbf827233d47029b850","179820f6f0764af8ab1413582f4048cc","bc70b8450e034b959ee624f6b75fa3d6","5ec94cfec05746a0bccd6f82ad4c1c85","23f577fd22ee41d59bf092508073021a","54717c8413a942c48e2cb291534261e0","80e716264d644641b2d13056b2a38126","d7ebc157aaae49669c7533ebee031593","94f36e0156e54f24aed2a7ea20f85d5d","7d88b19ad73c4037924284b4bc46b641","9c3c18998b034acaba202634c7dc7fd3","e042abad39d34daaaf3e7b939d360641","f9be60d9eb534f50bda80f7ef7da90c3","86b85dbf44fa4b9d8912a0b36863d5ce","719c951928544d039d1fda28bac198ab","f594185c6e814986bb3c37219ba9b1c1","fef2ec84633d43939435963de8dff140","aeb729c9a3f34e39ac3002135b42e02e","dc917ddda459402d95bb7f714b2b403b","4dd0f6e187084367b49062dec1889cfa","b27d4b0474c642f287e04cd4740e9fd5","37b3e1a2d20d4722920f3f245b285198","19d677424420449484d7e45c381a8bdd"]},"executionInfo":{"status":"ok","timestamp":1674767089468,"user_tz":300,"elapsed":1003,"user":{"displayName":"Bill Power","userId":"17299628813846429758"}},"outputId":"c194f02b-70c3-4247-eaf3-eeff845af02f"},"outputs":[{"output_type":"display_data","data":{"text/plain":["Downloading (…)solve/main/vocab.txt:   0%|          | 0.00/232k [00:00<?, ?B/s]"],"application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"2f943c0859294f1996ad7446d59f9875"}},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["Downloading (…)okenizer_config.json:   0%|          | 0.00/28.0 [00:00<?, ?B/s]"],"application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"179820f6f0764af8ab1413582f4048cc"}},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["Downloading (…)lve/main/config.json:   0%|          | 0.00/483 [00:00<?, ?B/s]"],"application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"f9be60d9eb534f50bda80f7ef7da90c3"}},"metadata":{}}],"source":["# For DistilBERT:\n","model_class, tokenizer_class, pretrained_weights = (ppb.DistilBertModel, ppb.DistilBertTokenizer, 'distilbert-base-uncased')\n","\n","## Want BERT instead of distilBERT? Uncomment the following line:\n","#model_class, tokenizer_class, pretrained_weights = (ppb.BertModel, ppb.BertTokenizer, 'bert-base-uncased')\n","\n","# TODO - figure out the above for the Q/A model. Might need a different\n","#        enough implementation/approach that it warrents a dif script. \n","#        It takes a masked input for the Q and options for multiple choice? idk. \n","\n","# Load pretrained model/tokenizer\n","tokenizer  = tokenizer_class.from_pretrained(pretrained_weights, truncate=True,)"]},{"cell_type":"markdown","metadata":{"id":"LOr21JIPpm8I"},"source":["## Creating Example Tuples"]},{"cell_type":"code","execution_count":12,"metadata":{"id":"C7i_zEHIkb_D","executionInfo":{"status":"ok","timestamp":1674767089468,"user_tz":300,"elapsed":11,"user":{"displayName":"Bill Power","userId":"17299628813846429758"}}},"outputs":[],"source":["# Adds 'raw_tokens', 'num_tokens', 'token_seq', 'attn_mask' columns to the DF\n","def add_seqs_and_masks(df_in, text_col):\n","  # Tokenize\n","  df_in['raw_tokens'] = df_in[text_col].apply(lambda x: tokenizer.encode(x,\n","                                                                         max_length=MAX_SEQ_LEN,\n","                                                                         truncation=True,\n","                                                                         add_special_tokens=True))\n","\n","  def pad_seq(s):\n","    return s + [0]*(MAX_SEQ_LEN-len(s))\n","\n","  def mask_seq(s):\n","    return [0 if i == 0 else 1 for i in s]\n","\n","  df_in['num_tokens'] = df_in['raw_tokens'].apply(lambda s: len(s))\n","  df_in['token_seq']  = df_in['raw_tokens'].apply(pad_seq)\n","  df_in['attn_mask']  = df_in['token_seq'].apply(mask_seq)"]},{"cell_type":"markdown","source":["### Question/Context Embedding Dicts"],"metadata":{"id":"noOpZRP8yXpr"}},{"cell_type":"markdown","source":["These two data frames contain all the natural langauge content for the question and context strings. \n","\n","These will be used to build maps so we can quickly find the token sequence and attention mask for each individual context string and question string. This will be used later to build the individual training examples. "],"metadata":{"id":"IOoeD1gRUkyE"}},{"cell_type":"code","source":["add_seqs_and_masks(questions, 'question_text')\n","add_seqs_and_masks(contexts, 'context_text')"],"metadata":{"id":"YpveAyZ4n8d_","executionInfo":{"status":"ok","timestamp":1674767089469,"user_tz":300,"elapsed":8,"user":{"displayName":"Bill Power","userId":"17299628813846429758"}}},"execution_count":13,"outputs":[]},{"cell_type":"code","source":["print(contexts['token_seq'])"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"z8pp0IC5y-4d","executionInfo":{"status":"ok","timestamp":1674767089671,"user_tz":300,"elapsed":208,"user":{"displayName":"Bill Power","userId":"17299628813846429758"}},"outputId":"f7c012d6-12dd-44b9-c64f-186a58a3ae7b"},"execution_count":14,"outputs":[{"output_type":"stream","name":"stdout","text":["0    [101, 2510, 1998, 24633, 102, 0, 0, 0, 0, 0, 0...\n","1    [101, 2510, 1998, 6627, 102, 0, 0, 0, 0, 0, 0,...\n","2    [101, 2974, 1998, 9394, 102, 0, 0, 0, 0, 0, 0,...\n","3    [101, 2974, 1998, 8275, 2739, 102, 0, 0, 0, 0,...\n","4    [101, 1996, 8798, 1997, 3533, 7226, 2368, 102,...\n","5    [101, 1996, 12353, 1997, 28896, 1012, 102, 0, ...\n","Name: token_seq, dtype: object\n"]}]},{"cell_type":"code","execution_count":15,"metadata":{"id":"35ukWIxGuq_t","executionInfo":{"status":"ok","timestamp":1674767089672,"user_tz":300,"elapsed":19,"user":{"displayName":"Bill Power","userId":"17299628813846429758"}},"colab":{"base_uri":"https://localhost:8080/"},"outputId":"38d90829-3f69-41b1-d140-db0306838954"},"outputs":[{"output_type":"stream","name":"stdout","text":["\n"]}],"source":["map_q_2_ts_am = dict()\n","def build_q_map(row):\n","  global map_q_emb\n","  map_q_2_ts_am[row['question_id']] = [torch.tensor(row['token_seq']), \n","                                       torch.tensor(row['attn_mask'])]\n","\n","map_ctx_2_ts_am = dict()\n","def build_ctx_map(row):\n","  global map_ctx_emb\n","  map_ctx_2_ts_am[row['context_id']] = [torch.tensor(row['token_seq']), \n","                                        torch.tensor(row['attn_mask'])]\n","\n","\n","questions.apply(build_q_map, axis=1)\n","contexts.apply(build_ctx_map, axis=1)\n","print(\"\")"]},{"cell_type":"markdown","source":["### Balancing - Over-Sampling Method"],"metadata":{"id":"Ee2A1EDh0Zgd"}},{"cell_type":"code","source":["def max_size_oversampling_wr(examples):\n","  question_counts = dict()\n","  context_counts  = dict()\n","  \n","  for _, _, _, _, ctx, q in examples:\n","    if q not in question_counts:\n","      question_counts[q] = 0\n","    question_counts[q] += 1\n","    \n","    if ctx not in context_counts:\n","      context_counts[ctx] = 0\n","    context_counts[ctx] += 1\n","\n","  context_examples    = { k: [] for k in context_counts}\n","  context_populations = { k: [] for k in context_counts}\n","\n","  for tsam_ctx, tsam_q, tsam_cnt, y, ctx, q in examples:\n","    context_populations[ctx].append([tsam_ctx, tsam_q, tsam_cnt, y])\n","\n","  max_size = 0\n","  for k in context_populations:\n","    size_pop = len(context_populations[k])\n","    if size_pop > max_size:\n","      max_size = size_pop\n","\n","  for k in context_examples:\n","    while len(context_examples[k]) < max_size:\n","      context_examples[k].append(random.sample(context_populations[k], 1)[0])\n","\n","  example_tuples_max_sampled = []\n","  for k in context_examples:\n","    for ex in context_examples[k]:\n","      example_tuples_max_sampled.append(ex)\n","  return example_tuples_max_sampled"],"metadata":{"id":"g8b-jBO3zaM9","executionInfo":{"status":"ok","timestamp":1674767089672,"user_tz":300,"elapsed":15,"user":{"displayName":"Bill Power","userId":"17299628813846429758"}}},"execution_count":16,"outputs":[]},{"cell_type":"markdown","source":["### Tuple Generation Method"],"metadata":{"id":"7EFQMMop0fyz"}},{"cell_type":"markdown","source":["This is the main method we call to turn a dataframe of content into a split and balanced set of training/test data. "],"metadata":{"id":"1sI_DhK5yo0A"}},{"cell_type":"code","source":["def make_example_tuples(df_content, balance=True):\n","  add_seqs_and_masks(df_content, 'content_text')\n","\n","  content_example_tuples = []\n","  \n","  def make_make_tuple(out_list):\n","    def make_tuple(row):\n","      out_list.append([\n","          map_q_2_ts_am[row['question_id']],\n","          map_ctx_2_ts_am[row['context_id']],\n","          [torch.tensor(row['token_seq']), torch.tensor(row['attn_mask'])],\n","          row['answer'],\n","          row['context_id'],\n","          row['question_id']\n","      ])\n","    return make_tuple\n","\n","  df_content.apply(make_make_tuple(content_example_tuples), axis=1)\n","\n","  if balance:\n","    return max_size_oversampling_wr(content_example_tuples)\n","  else:\n","    return content_example_tuples"],"metadata":{"id":"at-9T_v0h60u","executionInfo":{"status":"ok","timestamp":1674767089673,"user_tz":300,"elapsed":14,"user":{"displayName":"Bill Power","userId":"17299628813846429758"}}},"execution_count":17,"outputs":[]},{"cell_type":"markdown","metadata":{"id":"RB2B2S8mPFxJ"},"source":["## Test-Train Split, Batching"]},{"cell_type":"code","source":["def create_batch(tuples):\n","  q_tensors   = [i[0][0] for i in tuples]\n","  q_attn_m    = [i[0][1] for i in tuples]\n","  ctx_tensors = [i[1][0] for i in tuples]\n","  ctx_attn_m  = [i[1][1] for i in tuples] \n","  cnt_tensors = [i[2][0] for i in tuples]\n","  cnt_attn_m  = [i[2][1] for i in tuples]\n","\n","  x_tensors = [[torch.stack(q_tensors),   torch.stack(q_attn_m)],\n","               [torch.stack(ctx_tensors), torch.stack(ctx_attn_m)],\n","               [torch.stack(cnt_tensors), torch.stack(cnt_attn_m)]]\n","\n","  y_tensor = torch.tensor([i[3] for i in tuples], dtype=torch.float)\n","  y_tensor = torch.reshape(y_tensor, (-1, 1))\n","\n","  return x_tensors, y_tensor"],"metadata":{"id":"_qcWGF7Hqbr2","executionInfo":{"status":"ok","timestamp":1674767089673,"user_tz":300,"elapsed":11,"user":{"displayName":"Bill Power","userId":"17299628813846429758"}}},"execution_count":18,"outputs":[]},{"cell_type":"code","execution_count":19,"metadata":{"id":"FKixJD1p8kTY","executionInfo":{"status":"ok","timestamp":1674767089674,"user_tz":300,"elapsed":10,"user":{"displayName":"Bill Power","userId":"17299628813846429758"}}},"outputs":[],"source":["def create_test_train_batches(tuples, test_frac=TEST_FRAC, batch_size=BATCH_SIZE):\n","  NUM_TRAIN = int((1-test_frac)*len(tuples))\n","\n","  if test_frac == 0:\n","    train_tuples = tuples\n","    test_tuples = None\n","  else:\n","    train_tuples = tuples[:NUM_TRAIN]\n","    test_tuples  = tuples[NUM_TRAIN:]\n","\n","\n","  if batch_size == -1:\n","    batch_size = NUM_TRAIN\n","\n","  training_batches = [train_tuples[i:i+batch_size] for i in range(int(NUM_TRAIN/batch_size))]\n","  training_stacked = []\n","  for batch in training_batches:\n","    training_stacked.append(create_batch(batch))\n","\n","  if test_frac == 0:\n","    testing_stacked = None\n","  else:\n","    NUM_TEST = len(test_tuples)\n","    testing_batches = [test_tuples[i:i+batch_size] for i in range(int(NUM_TEST/batch_size))]\n","    testing_stacked = []\n","    for batch in testing_batches:\n","      testing_stacked.append(create_batch(batch))\n","\n","  return training_stacked, testing_stacked"]},{"cell_type":"markdown","source":["# Training/Evaluation Setup"],"metadata":{"id":"8FoP5ForAtkE"}},{"cell_type":"markdown","metadata":{"id":"rPCF7MZNzOAT"},"source":["## Model Implementation"]},{"cell_type":"code","execution_count":20,"metadata":{"id":"UYqqeGe8zVd8","executionInfo":{"status":"ok","timestamp":1674767091316,"user_tz":300,"elapsed":9,"user":{"displayName":"Bill Power","userId":"17299628813846429758"}}},"outputs":[],"source":["import torch.nn.functional as F\n","from torch.nn import Module, RNN, Linear, BCELoss, LogSoftmax, BatchNorm1d\n","\n","NUM_BERT_FEATURES = 768\n","\n","HL_QUESTION = 32\n","HL_CONTEXTS = 32\n","HL_CONTENT  = 32\n","HL_PRED = 8\n","\n","class AQAM(torch.nn.Module):\n","    def __init__(self):\n","        super().__init__()\n","\n","        # Transformer Embedding Layer\n","        self.bert_layer = model_class.from_pretrained(pretrained_weights)\n","\n","        # 3 MLP Stacks\n","        self.q_linear1   = Linear(NUM_BERT_FEATURES, HL_QUESTION)\n","        self.ctx_linear1 = Linear(NUM_BERT_FEATURES, HL_CONTEXTS)\n","        self.content_linear1 = Linear(NUM_BERT_FEATURES, HL_CONTENT)\n","        \n","        # Prediction Layers\n","        self.pred_linear1 = Linear(HL_QUESTION+HL_CONTEXTS+HL_CONTENT, HL_PRED)\n","        self.pred_linear2 = Linear(HL_PRED, 1)\n","\n","        # Batch Norms\n","        self.bn_q    = BatchNorm1d(HL_QUESTION)\n","        self.bn_ctx  = BatchNorm1d(HL_CONTEXTS)\n","        self.bn_cnt  = BatchNorm1d(HL_CONTENT) \n","\n","        # self.bn_triple = BatchNorm1d(HL_QUESTION+HL_CONTEXTS+HL_CONTENT)\n","        self.bn_cat  = BatchNorm1d(HL_PRED) \n","\n","    def forward(self, data):\n","        tok_seq_q,   attn_mask_q   = data[0]\n","        tok_seq_ctx, attn_mask_ctx = data[1]\n","        tok_seq_cnt, attn_mask_cnt = data[2]\n","\n","        emb_q   = self.bert_layer(tok_seq_q, \n","                                  attention_mask=attn_mask_q, \n","                                  output_attentions=False,\n","                                  output_hidden_states=False, \n","                                  return_dict=False)[0][:, 0, :]\n","\n","        emb_ctx = self.bert_layer(tok_seq_ctx,\n","                                  attention_mask=attn_mask_ctx, \n","                                  output_attentions=False,\n","                                  output_hidden_states=False, \n","                                  return_dict=False)[0][:, 0, :]\n","\n","        emb_cnt = self.bert_layer(tok_seq_cnt, \n","                                  attention_mask=attn_mask_cnt, \n","                                  output_attentions=False,\n","                                  output_hidden_states=False, \n","                                  return_dict=False)[0][:, 0, :]\n","\n","        # The 3 Heads - Question, Context, Content spaces.\n","        ls_q   = self.q_linear1(emb_q)\n","        ls_q   = self.bn_q(ls_q)\n","        ls_q   = F.relu(ls_q)\n","\n","        ls_ctx = self.ctx_linear1(emb_ctx)\n","        ls_ctx = self.bn_ctx(ls_ctx)\n","        ls_ctx = F.relu(ls_ctx)\n","        \n","        ls_cnt = self.content_linear1(emb_cnt)\n","        ls_cnt = self.bn_cnt(ls_cnt)\n","        ls_cnt = F.relu(ls_cnt)\n","\n","        ls_cat = torch.cat((ls_q, ls_ctx, ls_cnt), dim=1)\n","        \n","        # Prediction Layers\n","        ls_cat = self.pred_linear1(ls_cat)\n","        ls_cat = self.bn_cat(ls_cat)\n","        ls_cat = F.relu(ls_cat)\n","        return self.pred_linear2(ls_cat)"]},{"cell_type":"markdown","metadata":{"id":"h6ilu9ax8bze"},"source":["## Training and Evaluation Method"]},{"cell_type":"code","execution_count":21,"metadata":{"id":"f2D3fYj89Bpz","executionInfo":{"status":"ok","timestamp":1674767091317,"user_tz":300,"elapsed":8,"user":{"displayName":"Bill Power","userId":"17299628813846429758"}}},"outputs":[],"source":["from torch.optim import SGD"]},{"cell_type":"code","execution_count":22,"metadata":{"id":"MaoTTbX0BfNN","executionInfo":{"status":"ok","timestamp":1674767091317,"user_tz":300,"elapsed":7,"user":{"displayName":"Bill Power","userId":"17299628813846429758"}}},"outputs":[],"source":["def binary_acc(y_pred, y_test):\n","  # Where we handle the sigmoid for the BC\n","  y_pred_tag = torch.round(torch.sigmoid(y_pred))\n","  correct_results_sum = (y_pred_tag == y_test).sum().float()\n","  acc = correct_results_sum/float(y_test.shape[0])\n","  return acc"]},{"cell_type":"code","source":["def send_batch(batch, device):\n","  for i in range(3):\n","    batch[i][0] = batch[i][0].to(device)\n","    batch[i][1] = batch[i][1].to(device)\n","\n","def send_batches(batches, device):\n","  for batch, _ in batches:\n","    for i in range(3):\n","      batch[i][0] = batch[i][0].to(device)\n","      batch[i][1] = batch[i][1].to(device)"],"metadata":{"id":"fIBgdiZR-qvl","executionInfo":{"status":"ok","timestamp":1674767091319,"user_tz":300,"elapsed":8,"user":{"displayName":"Bill Power","userId":"17299628813846429758"}}},"execution_count":23,"outputs":[]},{"cell_type":"code","execution_count":24,"metadata":{"id":"ynT43r7n9s2P","executionInfo":{"status":"ok","timestamp":1674767091320,"user_tz":300,"elapsed":8,"user":{"displayName":"Bill Power","userId":"17299628813846429758"}}},"outputs":[],"source":["def train_and_evaluate(training_batches, test_set_batches, epochs, cuda_dev, model=None):\n","  if model is None:\n","    model = AQAM().to(cuda_dev)\n","  \n","  optimizer = SGD(model.parameters(), lr=0.001, momentum=0.9)\n","  criterion = torch.nn.BCEWithLogitsLoss().to(cuda_dev)\n","\n","  train_accs = []\n","  test_accs  = [[] for _ in test_set_batches]\n","  for epoch in tqdm(range(epochs), unit=\"epoch\"):\n","    model.train()\n","    optimizer.zero_grad()\n","    \n","    # Resample batches\n","\n","    batch_accs = []\n","    for batch, labels in training_batches:\n","      send_batch(batch, cuda_dev)\n","      labels = labels.to(cuda_dev)\n","\n","      out = model(batch)\n","      loss = criterion(out, labels)\n","      loss.backward()\n","      optimizer.step()\n","      batch_accs.append(binary_acc(out, labels))\n","\n","      del batch\n","      del labels\n","\n","    train_accs.append(sum(batch_accs)/float(len(batch_accs)))\n","\n","    model.eval()\n","    for t_idx, test_batches in enumerate(test_set_batches):\n","      test_batch_accs = []\n","      for test_batch, test_labels in test_batches:\n","        send_batch(test_batch, cuda_dev)\n","        test_labels = test_labels.to(cuda_dev)\n","\n","        test_out = model(test_batch)\n","        test_labels = test_labels.to(cuda_dev)\n","                \n","        test_batch_accs.append(binary_acc(test_out, test_labels))\n","        \n","        del test_batch\n","        del test_labels\n","      \n","      test_accs[t_idx].append(sum(test_batch_accs)/float(len(test_batch_accs)))\n","\n","  return train_accs, test_accs, model"]},{"cell_type":"markdown","source":["# Experiment\n"],"metadata":{"id":"0EEfqSGktDTk"}},{"cell_type":"markdown","source":["Here we want to see the impact on the baseline model. The following code is taken from the AQA 05 script. \n","\n","We know this ran using the data shape and model, so any errors should just be due to our changes to support fine-tuning. "],"metadata":{"id":"awiZgm9atGTa"}},{"cell_type":"code","source":["bal_exs_A3_majplus = make_example_tuples(content_a3_majplus)\n","random.shuffle(bal_exs_A3_majplus)\n","a3_mp_ttbs = create_test_train_batches(bal_exs_A3_majplus)\n","a3_mp_train_batches, a3_mp_test_batches = a3_mp_ttbs\n","\n","# Treat A2-FA data as the A2 test data. Already have this. \n","# We want to create a validation set, so lets divide the A2-FA data\n","# into two sets of data. We'll use one to train, and one to validate\n","# across all the experiments. 50/50 seems good?\n","test_exs_A2_fa = make_example_tuples(content_a2_fa, balance=False)\n","random.shuffle(test_exs_A2_fa)\n","a2_fa_ttbs = create_test_train_batches(test_exs_A2_fa,\n","                                       test_frac=0.5)\n","a2_fa_train_batches, a2_fa_test_batches = a2_fa_ttbs\n","\n","# train/eval A3-model on A3 Maj+ training data\n","#   - Pass in A3 test data\n","#   - Pass in A2-FA test data - Does it agree with the FA?\n","test_batches = [\n","  a3_mp_test_batches,\n","  a2_fa_test_batches\n","]"],"metadata":{"id":"amd9rLV6tLhg","executionInfo":{"status":"ok","timestamp":1674767099823,"user_tz":300,"elapsed":6031,"user":{"displayName":"Bill Power","userId":"17299628813846429758"}}},"execution_count":25,"outputs":[]},{"cell_type":"code","source":["print(torch.cuda.get_device_name(0))\n","cuda_name = torch.cuda.get_device_name(0)\n","cuda_dev  = torch.device(\"cuda:0\")"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"7NbZSkMC9NR1","executionInfo":{"status":"ok","timestamp":1674767100578,"user_tz":300,"elapsed":161,"user":{"displayName":"Bill Power","userId":"17299628813846429758"}},"outputId":"58bab8f7-d030-407c-8067-740a23d7dc04"},"execution_count":26,"outputs":[{"output_type":"stream","name":"stdout","text":["NVIDIA A100-SXM4-40GB\n"]}]},{"cell_type":"code","source":["train_acc_pre, test_accs_pre, a3_model = train_and_evaluate(a3_mp_train_batches, \n","                                                            test_batches,\n","                                                            EPOCHS,\n","                                                            cuda_dev)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":153,"referenced_widgets":["557bab4cebd445f9a347b5f9f85e8e91","6291af4dc6d0464f8134a61d5c015cd9","6f08df3f02984f0183c51de3310b1574","64a99dd2253c47db941a4fb4559e0d71","146e23d91d4c4076b45255bc5df69b72","c012b83969874e99a322629837530dbb","805e5a5e937843ad9988b57853b235c9","554b3236be944ae2b6ac720bc6987ca3","7e3a65b7d4a14f4cb3f05234739608cd","d2a9eb758dad44ebb50b84adabf1fc81","524351ac728d4c6a8cc5bb8a6701ee41","648ff2a4b4b840bcb7129368ef3140b9","88f7146f4d574bc5a6b40446e12579e5","51381d31a49c47aa842522be68ba4338","1e5dcfd07a9f4efdb2a241a0a3d1066b","e3d9b69995bc4526836ce2b2ac4784fe","ed49d4e1960448dcaab2d1b6d1ebdfe8","183d90021b6e4973bb875aa9b653becf","1ece6f4e46774b6dbd57ba67bf49989d","02c9083835b344f3a8f3f401ebebc066","7570902ff9b64e00adc1bb8b81d4aad7","e4b2a5b122bf4c25b0790440b061043e"]},"id":"B8MVOM5m3SZE","executionInfo":{"status":"ok","timestamp":1674770305557,"user_tz":300,"elapsed":3204994,"user":{"displayName":"Bill Power","userId":"17299628813846429758"}},"outputId":"27e46f19-9597-4fd8-85c8-024e80a9c394"},"execution_count":27,"outputs":[{"output_type":"display_data","data":{"text/plain":["Downloading (…)\"pytorch_model.bin\";:   0%|          | 0.00/268M [00:00<?, ?B/s]"],"application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"557bab4cebd445f9a347b5f9f85e8e91"}},"metadata":{}},{"output_type":"stream","name":"stderr","text":["Some weights of the model checkpoint at distilbert-base-uncased were not used when initializing DistilBertModel: ['vocab_layer_norm.bias', 'vocab_layer_norm.weight', 'vocab_projector.bias', 'vocab_transform.weight', 'vocab_transform.bias', 'vocab_projector.weight']\n","- This IS expected if you are initializing DistilBertModel from the checkpoint of a model trained on another task or with another architecture (e.g. initializing a BertForSequenceClassification model from a BertForPreTraining model).\n","- This IS NOT expected if you are initializing DistilBertModel from the checkpoint of a model that you expect to be exactly identical (initializing a BertForSequenceClassification model from a BertForSequenceClassification model).\n"]},{"output_type":"display_data","data":{"text/plain":["  0%|          | 0/100 [00:00<?, ?epoch/s]"],"application/vnd.jupyter.widget-view+json":{"version_major":2,"version_minor":0,"model_id":"648ff2a4b4b840bcb7129368ef3140b9"}},"metadata":{}}]},{"cell_type":"code","source":["with open(f\"{RESULTS_FN_SLUG}_EXP00.p\", 'wb') as f:\n","  pickle.dump(test_accs_pre, f)\n","\n","upload_file_to_gcs(f\"{RESULTS_FN_SLUG}_EXP00.p\", f\"{RESULTS_FN_SLUG}_EXP00.p\")"],"metadata":{"id":"Do3zAN43816w","executionInfo":{"status":"ok","timestamp":1674770307670,"user_tz":300,"elapsed":2138,"user":{"displayName":"Bill Power","userId":"17299628813846429758"}}},"execution_count":28,"outputs":[]},{"cell_type":"markdown","source":["#### Results - Baseline Epoch Losses"],"metadata":{"id":"xmQldHMTWfl-"}},{"cell_type":"markdown","source":["Here we just want to see the per-epoch training and test losses. We have multiple sets of test data to consider (2 for now). Need a graph that shows all 3 lines. \n","\n","This will give a baseline to compare against when we look at the effect of online training the model later (EXP1)."],"metadata":{"id":"LD0tWMduZFiK"}},{"cell_type":"code","source":["import matplotlib.pyplot as plt\n","%matplotlib notebook\n","%matplotlib inline"],"metadata":{"id":"Uo-1hODT9H9A","executionInfo":{"status":"ok","timestamp":1674770307673,"user_tz":300,"elapsed":25,"user":{"displayName":"Bill Power","userId":"17299628813846429758"}}},"execution_count":29,"outputs":[]},{"cell_type":"code","source":["cutoff = 100\n","labels = [\"A3 Maj+\", \"A2 FA\"]\n","colors = [\"tab:green\", \"tab:blue\"]\n","\n","for l, test, color in zip(labels, test_accs_pre, colors):\n","\n","  test = [i.cpu() for i in test]\n","  plt.plot(test[:cutoff], label=f\"{l}\", color=color)\n","\n","plt.title(\"Baseline Model Test Acc's\")\n","plt.legend(loc='lower left')\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":281},"id":"2gIe1FpyWd8f","executionInfo":{"status":"ok","timestamp":1674770822274,"user_tz":300,"elapsed":486,"user":{"displayName":"Bill Power","userId":"17299628813846429758"}},"outputId":"0a074488-7950-4120-ea8e-ad1715cb41b9"},"execution_count":31,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 432x288 with 1 Axes>"],"image/png":"\n"},"metadata":{"needs_background":"light"}}]},{"cell_type":"markdown","source":["Ouch. Need to iterate. That's a rough curve. Do I really need the CLS and SEP tokens for this LM? I think they were needed for the full BERT, but I thought DistillBERT let me get away without them? I should ping Jumanah to see if she has a better idea. "],"metadata":{"id":"bqX6nTzfJFHK"}}]}